--- misc/Python-2.3.4/Include/osdefs.h	Tue Feb 26 12:20:01 2002
+++ misc/build/Python-2.3.4/Include/osdefs.h	Mon Apr 14 11:55:55 2008
@@ -16,7 +16,7 @@
 
 /* Mod by chrish: QNX has WATCOM, but isn't DOS */
 #if !defined(__QNX__)
-#if defined(MS_WINDOWS) || defined(__BORLANDC__) || defined(__WATCOMC__) || defined(__DJGPP__) || defined(PYOS_OS2)
+#if defined(MS_WINDOWS) || defined(__BORLANDC__) || defined(__WATCOMC__) || defined(__DJGPP__) || defined(PYOS_OS2) || defined(__MINGW32__)
 #if defined(PYOS_OS2) && defined(PYCC_GCC)
 #define MAXPATHLEN 260
 #define SEP '/'
--- misc/Python-2.3.4/Include/pyport.h	Tue Sep 30 16:56:50 2003
+++ misc/build/Python-2.3.4/Include/pyport.h	Mon Apr 14 11:55:55 2008
@@ -2,6 +2,10 @@
 #define Py_PYPORT_H
 
 #include "pyconfig.h" /* include for defines */
+#if defined(__MINGW32__)
+#undef HAVE_FORKPTY
+#undef HAVE_OPENPTY
+#endif
 
 /**************************************************************************
 Symbols and macros to supply platform-independent interfaces to basic
@@ -346,11 +350,6 @@
 in platform-specific #ifdefs.
 **************************************************************************/
 
-#ifdef SOLARIS
-/* Unchecked */
-extern int gethostname(char *, int);
-#endif
-
 #ifdef __BEOS__
 /* Unchecked */
 /* It's in the libs, but not the headers... - [cjh] */
--- misc/Python-2.3.4/Lib/distutils/command/build_ext.py	Tue Nov 19 14:12:28 2002
+++ misc/build/Python-2.3.4/Lib/distutils/command/build_ext.py	Mon Apr 14 11:55:56 2008
@@ -181,7 +181,7 @@
         # for extensions under Cygwin and AtheOS Python's library directory must be
         # appended to library_dirs
         if sys.platform[:6] == 'cygwin' or sys.platform[:6] == 'atheos':
-            if string.find(sys.executable, sys.exec_prefix) != -1:
+            if string.find(sys.exec_prefix, sys.executable) != -1:
                 # building third party extensions
                 self.library_dirs.append(os.path.join(sys.prefix, "lib",
                                                       "python" + get_python_version(),
--- misc/Python-2.3.4/Lib/distutils/spawn.py	Thu Nov 21 21:41:07 2002
+++ misc/build/Python-2.3.4/Lib/distutils/spawn.py	Mon Apr 14 11:55:56 2008
@@ -179,7 +179,7 @@
         path = os.environ['PATH']
     paths = string.split(path, os.pathsep)
     (base, ext) = os.path.splitext(executable)
-    if (sys.platform == 'win32' or os.name == 'os2') and (ext != '.exe'):
+    if (sys.platform == 'win32' or sys.platform == 'cygwin' or os.name == 'os2') and (ext != '.exe'):
         executable = executable + '.exe'
     if not os.path.isfile(executable):
         for p in paths:
--- misc/Python-2.3.4/Lib/distutils/sysconfig.py	Mon Feb 10 15:02:33 2003
+++ misc/build/Python-2.3.4/Lib/distutils/sysconfig.py	Mon Apr 14 11:55:56 2008
@@ -468,6 +468,9 @@
     global _config_vars
     if _config_vars is None:
         func = globals().get("_init_" + os.name)
+        if sys.platform == "cygwin":
+            func = globals().get("_init_posix")
+
         if func:
             func()
         else:
--- misc/Python-2.3.4/Lib/os.py	Sun Apr  4 09:17:05 2004
+++ misc/build/Python-2.3.4/Lib/os.py	Mon Apr 14 11:55:56 2008
@@ -36,7 +36,21 @@
     except AttributeError:
         return [n for n in dir(module) if n[0] != '_']
 
-if 'posix' in _names:
+if 'mingw32' in _names:
+    name = 'nt'
+    linesep = '\r\n'
+    from posix import *
+    try:
+        from posix import _exit
+    except ImportError:
+        pass
+    import ntpath as path
+
+    import posix
+    __all__.extend(_get_exports_list(posix))
+    del posix
+
+elif 'posix' in _names:
     name = 'posix'
     linesep = '\n'
     from posix import *
--- misc/Python-2.3.4/Mac/OSX/Makefile	Tue Nov  4 23:45:16 2003
+++ misc/build/Python-2.3.4/Mac/OSX/Makefile	Mon Apr 14 11:55:56 2008
@@ -26,8 +26,8 @@
 INSTALLED_PYTHONW=$(APPINSTALLDIR)/Contents/MacOS/Python
 
 # Items more-or-less copied from the main Makefile
-DIRMODE=755
-FILEMODE=644
+DIRMODE=775
+FILEMODE=664
 INSTALL=/usr/bin/install -c
 INSTALL_SYMLINK=ln -fsn
 INSTALL_PROGRAM=${INSTALL}
--- misc/Python-2.3.4/Makefile.pre.in	2003-11-18 20:54:00.000000000 +0100
+++ misc/build/Python-2.3.4/Makefile.pre.in	2009-03-24 10:57:35.000000000 +0100
@@ -56,7 +56,7 @@
 OPT=		@OPT@
 BASECFLAGS=	@BASECFLAGS@
 CFLAGS=		$(BASECFLAGS) $(OPT)
-CPPFLAGS=	-I. -I$(srcdir)/Include
+CPPFLAGS=	-D_FORTIFY_SOURCE=0 -I. -I$(srcdir)/Include
 LDFLAGS=	@LDFLAGS@
 LDLAST=		@LDLAST@
 SGI_ABI=	@SGI_ABI@
@@ -97,6 +97,7 @@
 LDSHARED=	@LDSHARED@
 BLDSHARED=	@BLDSHARED@
 DESTSHARED=	$(BINLIBDEST)/lib-dynload
+DESTSHAREDFORRULES=	@DESTSHAREDFORRULES@
 
 # Executable suffix (.exe on Windows and Mac OS X)
 EXE=		@EXEEXT@
@@ -114,10 +115,10 @@
 RUNSHARED=       @RUNSHARED@
 
 # Modes for directories, executables and data files created by the
-# install process.  Default to user-only-writable for all file types.
-DIRMODE=	755
-EXEMODE=	755
-FILEMODE=	644
+# install process.  Default to group-writable for all file types.
+DIRMODE=	775
+EXEMODE=	775
+FILEMODE=	664
 
 # configure script arguments
 CONFIG_ARGS=	@CONFIG_ARGS@
@@ -167,7 +168,7 @@
 # Modules
 MODULE_OBJS=	\
 		Modules/config.o \
-		Modules/getpath.o \
+		@GETPATH_OBJS@ \
 		Modules/main.o \
 		Modules/gcmodule.o
 
@@ -308,14 +309,14 @@
 			$(BLDLIBRARY) $(LIBS) $(MODLIBS) $(SYSLIBS) $(LDLAST)
 
 platform: $(BUILDPYTHON)
-	$(RUNSHARED) ./$(BUILDPYTHON) -E -c 'import sys ; from distutils.util import get_platform ; print get_platform()+"-"+sys.version[0:3]' >platform
+	$(RUNSHARED) $(WRAPCMD) ./$(BUILDPYTHON) -E -c 'import sys ; from distutils.util import get_platform ; print get_platform()+"-"+sys.version[0:3]' >platform
 
 
 # Build the shared modules
 sharedmods: $(BUILDPYTHON)
 	case $$MAKEFLAGS in \
-	*-s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py -q build;; \
-	*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' ./$(BUILDPYTHON) -E $(srcdir)/setup.py build;; \
+	*-s*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' $(WRAPCMD) ./$(BUILDPYTHON) -E $(srcdir)/setup.py -q build;; \
+	*) $(RUNSHARED) CC='$(CC)' LDSHARED='$(BLDSHARED)' OPT='$(OPT)' $(WRAPCMD) ./$(BUILDPYTHON) -E $(srcdir)/setup.py build;; \
 	esac
 
 # buildno should really depend on something like LIBRARY_SRC
@@ -345,12 +346,15 @@
 
 libpython$(VERSION).so: $(LIBRARY_OBJS)
 	if test $(INSTSONAME) != $(LDLIBRARY); then \
-		$(LDSHARED) -Wl,-soname=$(INSTSONAME) -o $(INSTSONAME) $(LIBRARY_OBJS) $(SHLIBS) $(LIBC) $(LIBM); \
+		$(LDSHARED) -Wl,-h -Wl,$(INSTSONAME) -o $(INSTSONAME) $(LIBRARY_OBJS) $(SHLIBS) $(LIBC) $(LIBM); \
 		$(LN) -f $(INSTSONAME) $@; \
 	else\
 		$(LDSHARED) -o $@ $(LIBRARY_OBJS) $(SHLIBS) $(LIBC) $(LIBM); \
 	fi
 
+libpython$(VERSION).dylib: $(LIBRARY)
+	$(CC) -dynamiclib -all_load -framework System -framework CoreServices -framework Foundation $(LIBRARY) -o $@ -install_name $@ -current_version $(VERSION) -compatibility_version $(VERSION) -ldl
+
 libpython$(VERSION).sl: $(LIBRARY_OBJS)
 	$(LDSHARED) -o $@ $(LIBRARY_OBJS) $(LIBC) $(LIBM)
 
@@ -456,6 +460,9 @@
 Objects/unicodectype.o:	$(srcdir)/Objects/unicodectype.c \
 				$(srcdir)/Objects/unicodetype_db.h
 
+PC/import_nt.o: $(srcdir)/PC/import_nt.c
+		$(CC) -c $(PY_CFLAGS) -I$(srcdir)/Python -o $@ $(srcdir)/PC/import_nt.c
+
 ############################################################################
 # Header files
 
@@ -523,7 +530,7 @@
 
 TESTOPTS=	-l
 TESTPROG=	$(srcdir)/Lib/test/regrtest.py
-TESTPYTHON=	$(RUNSHARED) ./$(BUILDPYTHON) -E -tt
+TESTPYTHON=	$(RUNSHARED) $(WRAPCMD) ./$(BUILDPYTHON) -E -tt
 test:		all platform
 		-find $(srcdir)/Lib -name '*.py[co]' -print | xargs rm -f
 		-$(TESTPYTHON) $(TESTPROG) $(TESTOPTS)
@@ -559,7 +566,7 @@
 # Install shared libraries enabled by Setup
 DESTDIRS=	$(exec_prefix) $(LIBDIR) $(BINLIBDEST) $(DESTSHARED)
 
-oldsharedinstall: $(DESTSHARED) $(SHAREDMODS)
+oldsharedinstall: $(DESTSHAREDFORRULES) $(SHAREDMODS)
 		@for i in X $(SHAREDMODS); do \
 		  if test $$i != X; then \
 		    echo $(INSTALL_SHARED) $$i $(DESTSHARED)/`basename $$i`; \
@@ -567,7 +574,7 @@
 		  fi; \
 		done
 
-$(DESTSHARED):
+$(DESTSHAREDFORRULES):
 		@for i in $(DESTDIRS); \
 		do \
 			if test ! -d $(DESTDIR)$$i; then \
@@ -615,6 +622,9 @@
 		fi; \
 	else	true; \
 	fi
+	if test -f libpython$(VERSION).dylib; then \
+		$(INSTALL_SHARED) libpython$(VERSION).dylib $(DESTDIR)$(LIBDIR)/$(INSTSONAME); \
+	fi
 
 # Install the manual page
 maninstall:
@@ -705,19 +715,19 @@
 	done
 	$(INSTALL_DATA) $(srcdir)/LICENSE $(DESTDIR)$(LIBDEST)/LICENSE.txt
 	PYTHONPATH=$(DESTDIR)$(LIBDEST)  $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -tt $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(WRAPCMD) ./$(BUILDPYTHON) -Wi -tt $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST) -f \
 		-x 'badsyntax|site-packages' $(DESTDIR)$(LIBDEST)
 	PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -tt -O $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(WRAPCMD) ./$(BUILDPYTHON) -Wi -tt -O $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST) -f \
 		-x 'badsyntax|site-packages' $(DESTDIR)$(LIBDEST)
 	PYTHONPATH=$(DESTDIR)$(LIBDEST)  $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -t $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(WRAPCMD) ./$(BUILDPYTHON) -Wi -t $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST)/site-packages -f \
 		-x badsyntax $(DESTDIR)$(LIBDEST)/site-packages
 	PYTHONPATH=$(DESTDIR)$(LIBDEST) $(RUNSHARED) \
-		./$(BUILDPYTHON) -Wi -t -O $(DESTDIR)$(LIBDEST)/compileall.py \
+		$(WRAPCMD) ./$(BUILDPYTHON) -Wi -t -O $(DESTDIR)$(LIBDEST)/compileall.py \
 		-d $(LIBDEST)/site-packages -f \
 		-x badsyntax $(DESTDIR)$(LIBDEST)/site-packages
 
@@ -812,7 +822,7 @@
 # Install the dynamically loadable modules
 # This goes into $(exec_prefix)
 sharedinstall:
-	$(RUNSHARED) ./$(BUILDPYTHON) -E $(srcdir)/setup.py install \
+	$(RUNSHARED) $(WRAPCMD) ./$(BUILDPYTHON) -E $(srcdir)/setup.py install \
 	   	--prefix=$(prefix) \
 		--install-scripts=$(BINDIR) \
 		--install-platlib=$(DESTSHARED) \
--- misc/Python-2.3.4/Misc/setuid-prog.c	Thu Sep 10 22:18:09 1998
+++ misc/build/Python-2.3.4/Misc/setuid-prog.c	Mon Apr 14 11:55:56 2008
@@ -70,6 +70,12 @@
 #define environ _environ
 #endif
 
+#if defined(__APPLE__)
+# include <sys/time.h>
+# include <crt_externs.h>
+# define environ (*_NSGetEnviron())
+#endif /* __APPLE__ */
+
 /* don't change def_IFS */
 char def_IFS[] = "IFS= \t\n";
 /* you may want to change def_PATH, but you should really change it in */
--- misc/Python-2.3.4/Modules/_hotshot.c	Mon Mar 17 20:46:07 2003
+++ misc/build/Python-2.3.4/Modules/_hotshot.c	Mon Apr 14 11:55:56 2008
@@ -12,7 +12,7 @@
  * Which timer to use should be made more configurable, but that should not
  * be difficult.  This will do for now.
  */
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #include <windows.h>
 #include <direct.h>    /* for getcwd() */
 typedef __int64 hs_time;
@@ -98,7 +98,7 @@
 static PyObject * ProfilerError = NULL;
 
 
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 #ifdef GETTIMEOFDAY_NO_TZ
 #define GETTIMEOFDAY(ptv) gettimeofday((ptv))
 #else
@@ -812,7 +812,7 @@
 get_tdelta(ProfilerObject *self)
 {
     int tdelta;
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
     hs_time tv;
     hs_time diff;
 
@@ -904,7 +904,7 @@
 
 /* A couple of useful helper functions. */
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 static LARGE_INTEGER frequency = {0, 0};
 #endif
 
@@ -916,7 +916,7 @@
 {
     hs_time tv1, tv2;
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
     hs_time diff;
     QueryPerformanceFrequency(&frequency);
 #endif
@@ -924,7 +924,7 @@
     GETTIMEOFDAY(&tv1);
     while (1) {
         GETTIMEOFDAY(&tv2);
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
         diff = tv2 - tv1;
         if (diff != 0) {
             timeofday_diff = (unsigned long)diff;
@@ -940,7 +940,7 @@
         }
 #endif
     }
-#if defined(MS_WINDOWS) || defined(macintosh) || defined(PYOS_OS2) || \
+#if defined(MS_WINDOWS) || defined(__MINGW32__) || defined(macintosh) || defined(PYOS_OS2) || \
     defined(__VMS)
     rusage_diff = -1;
 #else
@@ -1466,7 +1466,7 @@
     else
         pack_add_info(self, "executable-version", buffer);
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
     PyOS_snprintf(cwdbuffer, sizeof(cwdbuffer), "%I64d", frequency.QuadPart);
     pack_add_info(self, "reported-performance-frequency", cwdbuffer);
 #else
@@ -1575,7 +1575,7 @@
 }
 
 PyDoc_VAR(resolution__doc__) = 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 PyDoc_STR(
 "resolution() -> (performance-counter-ticks, update-frequency)\n"
 "Return the resolution of the timer provided by the QueryPerformanceCounter()\n"
@@ -1602,7 +1602,7 @@
             calibrate();
             calibrate();
         }
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
         result = Py_BuildValue("ii", timeofday_diff, frequency.LowPart);
 #else
         result = Py_BuildValue("ii", timeofday_diff, rusage_diff);
--- misc/Python-2.3.4/Modules/config.c.in	Sun Jul  7 05:59:34 2002
+++ misc/build/Python-2.3.4/Modules/config.c.in	Mon Apr 14 11:55:56 2008
@@ -39,6 +39,9 @@
 	{"__builtin__", NULL},
 	{"sys", NULL},
 	{"exceptions", NULL},
+#ifdef __MINGW32__
+	{"mingw32", NULL},
+#endif
 
 	/* This lives in gcmodule.c */
 	{"gc", initgc},
--- misc/Python-2.3.4/Modules/expat/Makefile.in	2002-02-12 00:13:05.000000000 +0100
+++ misc/build/Python-2.3.4/Modules/expat/Makefile.in	2009-03-24 11:01:46.000000000 +0100
@@ -78,7 +78,7 @@
 INCLUDES = -I$(srcdir) -I. -I..
 DEFS = @DEFS@ -DPACKAGE='"$(PACKAGE)"' -DVERSION='"$(PACKAGE)_$(VERSION)"'
 
-CPPFLAGS = @CPPFLAGS@
+CPPFLAGS = -D_FORTIFY_SOURCE=0 @CPPFLAGS@
 LDFLAGS = @LDFLAGS@
 LIBS = @LIBS@
 CFLAGS = @CFLAGS@
--- misc/Python-2.3.4/Modules/mmapmodule.c	Tue Jul 15 14:37:46 2003
+++ misc/build/Python-2.3.4/Modules/mmapmodule.c	Mon Apr 14 11:55:56 2008
@@ -20,11 +20,11 @@
 
 #include <Python.h>
 
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 #define UNIX
 #endif
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #include <windows.h>
 static int
 my_getpagesize(void)
@@ -75,7 +75,7 @@
 	size_t	size;
 	size_t	pos;
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	HANDLE	map_handle;
 	HANDLE	file_handle;
 	char *	tagname;
@@ -92,7 +92,7 @@
 static void
 mmap_object_dealloc(mmap_object *m_obj)
 {
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (m_obj->data != NULL)
 		UnmapViewOfFile (m_obj->data);
 	if (m_obj->map_handle != INVALID_HANDLE_VALUE)
@@ -118,7 +118,7 @@
 {
         if (!PyArg_ParseTuple(args, ":close"))
 		return NULL;
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	/* For each resource we maintain, we need to check
 	   the value is valid, and if so, free the resource 
 	   and set the member value to an invalid value so
@@ -151,7 +151,7 @@
 	return (Py_None);
 }
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #define CHECK_VALID(err)						\
 do {									\
     if (self->map_handle == INVALID_HANDLE_VALUE) {						\
@@ -338,7 +338,7 @@
         if (!PyArg_ParseTuple(args, ":size"))
 		return NULL;
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (self->file_handle != INVALID_HANDLE_VALUE) {
 		return (Py_BuildValue (
 			"l", (long)
@@ -378,7 +378,7 @@
 	if (!PyArg_ParseTuple (args, "l:resize", &new_size) || 
 	    !is_resizeable(self)) {
 		return NULL;
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	} else { 
 		DWORD dwErrCode = 0;
 		/* First, unmap the file view */
@@ -469,7 +469,7 @@
 				 "flush values out of range");
 		return NULL;
 	} else {
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 		return (Py_BuildValue("l", (long)
                                       FlushViewOfFile(self->data+offset, size)));
 #endif /* MS_WINDOWS */
@@ -926,7 +926,7 @@
 }
 #endif /* UNIX */
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 static PyObject *
 new_mmap_object(PyObject *self, PyObject *args, PyObject *kwdict)
 {
--- misc/Python-2.3.4/Modules/posixmodule.c	Tue May  4 10:07:49 2004
+++ misc/build/Python-2.3.4/Modules/posixmodule.c	Mon Apr 14 11:55:56 2008
@@ -104,6 +104,15 @@
 #define HAVE_FSYNC	1
 #define fsync _commit
 #else
+#ifdef __MINGW32__
+#define HAVE_SPAWNV	1
+#define HAVE_EXECV      1
+#define HAVE_GETCWD     1
+#define HAVE_OPENDIR    1
+#define HAVE_PIPE       1
+#define HAVE_POPEN      1
+#define HAVE_SYSTEM	1
+#else
 #if defined(PYOS_OS2) && defined(PYCC_GCC) || defined(__VMS)
 /* Everything needed is defined in PC/os2emx/pyconfig.h or vms/pyconfig.h */
 #else			/* all other compilers */
@@ -127,6 +136,7 @@
 #define HAVE_WAIT       1
 #define HAVE_TTYNAME	1
 #endif  /* PYOS_OS2 && PYCC_GCC && __VMS */
+#endif  /* __MINGW32__ */
 #endif  /* _MSC_VER */
 #endif  /* __BORLANDC__ */
 #endif  /* ! __WATCOMC__ || __QNX__ */
@@ -154,7 +164,7 @@
 #if defined(PYCC_VACPP)
 extern int mkdir(char *);
 #else
-#if ( defined(__WATCOMC__) || defined(_MSC_VER) ) && !defined(__QNX__)
+#if ( defined(__WATCOMC__) || defined(_MSC_VER) || defined(__MINGW32__) ) && !defined(__QNX__)
 extern int mkdir(const char *);
 #else
 extern int mkdir(const char *, mode_t);
@@ -304,7 +314,7 @@
 #endif
 
 /* Return a dictionary corresponding to the POSIX environment table */
-#ifdef WITH_NEXT_FRAMEWORK
+#ifdef __APPLE__
 /* On Darwin/MacOSX a shared library or framework has no access to
 ** environ directly, we must obtain it with _NSGetEnviron().
 */
@@ -322,7 +332,7 @@
 	d = PyDict_New();
 	if (d == NULL)
 		return NULL;
-#ifdef WITH_NEXT_FRAMEWORK
+#ifdef __APPLE__
 	if (environ == NULL)
 		environ = *_NSGetEnviron();
 #endif
@@ -918,7 +928,7 @@
 	char *pathfree = NULL;  /* this memory must be free'd */
 	int res;
 
-#ifdef MS_WINDOWS
+#ifdef MS_WINDOWS || defined (__MINGW32__)
 	int pathlen;
 	char pathcopy[MAX_PATH];
 #endif /* MS_WINDOWS */
@@ -972,7 +982,7 @@
 		return NULL;
 	pathfree = path;
 
-#ifdef MS_WINDOWS
+#ifdef MS_WINDOWS || defined (__MINGW32__)
 	pathlen = strlen(path);
 	/* the library call can blow up if the file name is too long! */
 	if (pathlen > MAX_PATH) {
@@ -1693,7 +1703,7 @@
 	                      Py_FileSystemDefaultEncoding, &path, &mode))
 		return NULL;
 	Py_BEGIN_ALLOW_THREADS
-#if ( defined(__WATCOMC__) || defined(_MSC_VER) || defined(PYCC_VACPP) ) && !defined(__QNX__)
+#if ( defined(__WATCOMC__) || defined(_MSC_VER) || defined(__MINGW32__) || defined(PYCC_VACPP) ) && !defined(__QNX__)
 	res = mkdir(path);
 #else
 	res = mkdir(path, mode);
@@ -5387,7 +5397,11 @@
 	int fds[2];
 	int res;
 	Py_BEGIN_ALLOW_THREADS
+#ifdef __MINGW32__
+	res = _pipe(fds, 1024, O_BINARY);
+#else
 	res = pipe(fds);
+#endif
 	Py_END_ALLOW_THREADS
 	if (res != 0)
 		return posix_error();
--- misc/Python-2.3.4/Modules/readline.c	Thu Nov 13 08:42:13 2003
+++ misc/build/Python-2.3.4/Modules/readline.c	Mon Apr 14 11:55:56 2008
@@ -93,7 +93,7 @@
 	return Py_None;
 }
 
-static int history_length = -1; /* do not truncate history by default */
+static int _history_length = -1; /* do not truncate history by default */
 PyDoc_STRVAR(doc_read_history_file,
 "read_history_file([filename]) -> None\n\
 Load a readline history file.\n\
@@ -109,8 +109,8 @@
 	if (!PyArg_ParseTuple(args, "|z:write_history_file", &s))
 		return NULL;
 	errno = write_history(s);
-	if (!errno && history_length >= 0)
-		history_truncate_file(s, history_length);
+	if (!errno && _history_length >= 0)
+		history_truncate_file(s, _history_length);
 	if (errno)
 		return PyErr_SetFromErrno(PyExc_IOError);
 	Py_INCREF(Py_None);
@@ -128,10 +128,10 @@
 static PyObject*
 set_history_length(PyObject *self, PyObject *args)
 {
-	int length = history_length;
+	int length = _history_length;
 	if (!PyArg_ParseTuple(args, "i:set_history_length", &length))
 		return NULL;
-	history_length = length;
+	_history_length = length;
 	Py_INCREF(Py_None);
 	return Py_None;
 }
@@ -148,7 +148,7 @@
 static PyObject*
 get_history_length(PyObject *self, PyObject *noarg)
 {
-	return PyInt_FromLong(history_length);
+	return PyInt_FromLong(_history_length);
 }
 
 PyDoc_STRVAR(get_history_length_doc,
--- misc/Python-2.3.4/Modules/selectmodule.c	Mon Mar 22 21:20:33 2004
+++ misc/build/Python-2.3.4/Modules/selectmodule.c	Mon Apr 14 11:55:56 2008
@@ -14,7 +14,7 @@
    Users who want even more than the boosted limit should #define
    FD_SETSIZE higher before this; e.g., via compiler /D switch.
 */
-#if defined(MS_WINDOWS) && !defined(FD_SETSIZE)
+#if (defined(MS_WINDOWS) || defined(__MINGW32__)) && !defined(FD_SETSIZE)
 #define FD_SETSIZE 512
 #endif 
 
@@ -38,7 +38,7 @@
 #include <utils.h>
 #endif
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #include <winsock.h>
 #else
 #ifdef __BEOS__
@@ -271,7 +271,7 @@
 	n = select(max, &ifdset, &ofdset, &efdset, tvp);
 	Py_END_ALLOW_THREADS
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (n == SOCKET_ERROR) {
 		PyErr_SetExcFromWindowsErr(SelectError, WSAGetLastError());
 	}
--- misc/Python-2.3.4/Modules/socketmodule.c	2004-04-11 14:10:03.000000000 +0200
+++ misc/build/Python-2.3.4/Modules/socketmodule.c	2009-03-14 18:16:34.000000000 +0100
@@ -136,7 +136,7 @@
 #endif
 
 #if !defined(HAVE_GETHOSTBYNAME_R) && defined(WITH_THREAD) && \
-    !defined(MS_WINDOWS)
+    !defined(MS_WINDOWS) && !defined(__MINGW32__)
 # define USE_GETHOSTBYNAME_LOCK
 #endif
 
@@ -215,7 +215,7 @@
 
 /* Addressing includes */
 
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 
 /* Non-MS WINDOWS includes */
 # include <netdb.h>
@@ -296,14 +296,14 @@
 #include "getnameinfo.c"
 #endif
 
-#if defined(MS_WINDOWS) || defined(__BEOS__)
+#if defined(MS_WINDOWS) || defined(__MINGW32__) || defined(__BEOS__)
 /* BeOS suffers from the same socket dichotomy as Win32... - [cjh] */
 /* seem to be a few differences in the API */
 #define SOCKETCLOSE closesocket
 #define NO_DUP /* Actually it exists on NT 3.5, but what the heck... */
 #endif
 
-#ifdef MS_WIN32
+#if defined(MS_WIN32) || defined(__MINGW32__)
 #define EAFNOSUPPORT WSAEAFNOSUPPORT
 #define snprintf _snprintf
 #endif
@@ -359,7 +359,7 @@
 static PyObject *
 set_error(void)
 {
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	int err_no = WSAGetLastError();
 	static struct {
 		int no;
@@ -544,7 +544,7 @@
 internal_setblocking(PySocketSockObject *s, int block)
 {
 #ifndef RISCOS
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 	int delay_flag;
 #endif
 #endif
@@ -556,7 +556,7 @@
 		   (void *)(&block), sizeof(int));
 #else
 #ifndef RISCOS
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 #if defined(PYOS_OS2) && !defined(PYCC_GCC)
 	block = !block;
 	ioctl(s->sock_fd, FIONBIO, (caddr_t)&block, sizeof(block));
@@ -1124,7 +1124,7 @@
 		return NULL;
 	memset(addrbuf, 0, addrlen);
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	newfd = INVALID_SOCKET;
 #else
 	newfd = -1;
@@ -1142,7 +1142,7 @@
 		return NULL;
 	}
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (newfd == INVALID_SOCKET)
 #else
 	if (newfd < 0)
@@ -1455,7 +1455,7 @@
 	timeout = 0;
 	res = connect(s->sock_fd, addr, addrlen);
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 
 	if (s->sock_timeout > 0.0) {
 		if (res < 0 && WSAGetLastError() == WSAEWOULDBLOCK) {
@@ -1886,7 +1886,7 @@
 	timeout = internal_select(s, 0);
 	if (!timeout)
 		n = recvfrom(s->sock_fd, PyString_AS_STRING(buf), len, flags,
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 #if defined(PYOS_OS2) && !defined(PYCC_GCC)
 			     (struct sockaddr *)addrbuf, &addrlen
 #else
@@ -2245,7 +2245,7 @@
 	fd = socket(family, type, proto);
 	Py_END_ALLOW_THREADS
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (fd == INVALID_SOCKET)
 #else
 	if (fd < 0)
@@ -3368,7 +3368,7 @@
 #endif /* RISCOS */
 
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #define OS_INIT_DEFINED
 
 /* Additional initialization and cleanup for Windows */
--- misc/Python-2.3.4/Modules/socketmodule.h	Sat May  3 11:14:53 2003
+++ misc/build/Python-2.3.4/Modules/socketmodule.h	Mon Apr 14 11:55:56 2008
@@ -1,7 +1,7 @@
 /* Socket module header file */
 
 /* Includes needed for the sockaddr_* symbols below */
-#ifndef MS_WINDOWS
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__)
 #ifdef __VMS
 #   include <socket.h>
 # else
@@ -15,7 +15,11 @@
 #else /* MS_WINDOWS */
 #if _MSC_VER >= 1300
 # include <winsock2.h>
+# define inet_pton inet_pton_win32
+# define inet_ntop inet_ntop_win32
 # include <ws2tcpip.h>
+# undef inet_pton
+# undef inet_ntop
 # define HAVE_ADDRINFO
 # define HAVE_SOCKADDR_STORAGE
 # define HAVE_GETADDRINFO
@@ -49,7 +53,7 @@
 #define PySocket_CAPI_NAME	"CAPI"
 
 /* Abstract the socket file descriptor type */
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 typedef SOCKET SOCKET_T;
 #	ifdef MS_WIN64
 #		define SIZEOF_SOCKET_T 8
--- misc/Python-2.3.4/Modules/timemodule.c	Tue Jul  1 07:16:08 2003
+++ misc/build/Python-2.3.4/Modules/timemodule.c	Mon Apr 14 11:55:56 2008
@@ -19,7 +19,7 @@
 
 #ifdef HAVE_FTIME
 #include <sys/timeb.h>
-#if !defined(MS_WINDOWS) && !defined(PYOS_OS2)
+#if !defined(MS_WINDOWS) && !defined(__MINGW32__) && !defined(PYOS_OS2)
 extern int ftime(struct timeb *);
 #endif /* MS_WINDOWS */
 #endif /* HAVE_FTIME */
@@ -27,7 +27,7 @@
 #if defined(__WATCOMC__) && !defined(__QNX__)
 #include <i86.h>
 #else
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #define WIN32_LEAN_AND_MEAN
 #include <windows.h>
 #include "pythread.h"
@@ -55,7 +55,7 @@
 #endif /* MS_WINDOWS */
 #endif /* !__WATCOMC__ || __QNX__ */
 
-#if defined(MS_WINDOWS) && !defined(MS_WIN64) && !defined(__BORLANDC__)
+#if ( defined(MS_WINDOWS) && !defined(MS_WIN64) && !defined(__BORLANDC__) ) || defined(__MINGW32__)
 /* Win32 has better clock replacement
    XXX Win64 does not yet, but might when the platform matures. */
 #undef HAVE_CLOCK /* We have our own version down below */
@@ -159,7 +159,7 @@
 }
 #endif /* HAVE_CLOCK */
 
-#if defined(MS_WINDOWS) && !defined(MS_WIN64) && !defined(__BORLANDC__)
+#if ( defined(MS_WINDOWS) && !defined(MS_WIN64) && !defined(__BORLANDC__) ) || defined(__MINGW32__)
 /* Due to Mark Hammond and Tim Peters */
 static PyObject *
 time_clock(PyObject *self, PyObject *args)
@@ -747,7 +747,7 @@
 	/* Set, or reset, module variables like time.timezone */
 	inittimezone(m);
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	/* Helper to allow interrupts for Windows.
 	   If Ctrl+C event delivered while not sleeping
 	   it will be ignored.
@@ -843,7 +843,7 @@
 	Py_BEGIN_ALLOW_THREADS
 	delay((int)(secs * 1000 + 0.5));  /* delay() uses milliseconds */
 	Py_END_ALLOW_THREADS
-#elif defined(MS_WINDOWS)
+#elif defined(MS_WINDOWS) || defined(__MINGW32__)
 	{
 		double millisecs = secs * 1000.0;
 		unsigned long ul_millis;
--- misc/Python-2.3.4/PC/dl_nt.c	Thu Jul 26 15:41:05 2001
+++ misc/build/Python-2.3.4/PC/dl_nt.c	Mon Apr 14 11:55:56 2008
@@ -7,10 +7,10 @@
 forgotten) from the programmer.
 
 */
-#include "windows.h"
+#include <windows.h>
 
 /* NT and Python share these */
-#include "pyconfig.h"
+#include <pyconfig.h>
 #include "Python.h"
 
 char dllVersionBuffer[16] = ""; // a private buffer
--- misc/Python-2.3.4/PC/getpathp.c	Mon Aug 18 19:54:10 2003
+++ misc/build/Python-2.3.4/PC/getpathp.c	Mon Apr 14 11:55:56 2008
@@ -57,7 +57,7 @@
 #include "Python.h"
 #include "osdefs.h"
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 #include <windows.h>
 #include <tchar.h>
 #endif
@@ -183,7 +183,7 @@
 	return 0;
 }
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 
 /* a string loaded from the DLL at startup.*/
 extern const char *PyWin_DLLVersionString;
@@ -350,7 +350,7 @@
 	char *path = getenv("PATH");
 	char *prog = Py_GetProgramName();
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	extern HANDLE PyWin_DLLhModule;
 #ifdef UNICODE
 	WCHAR wprogpath[MAXPATHLEN+1];
@@ -436,7 +436,7 @@
 	char *pythonhome = Py_GetPythonHome();
 	char *envpath = Py_GETENV("PYTHONPATH");
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	int skiphome, skipdefault;
 	char *machinepath = NULL;
 	char *userpath = NULL;
@@ -461,7 +461,7 @@
 		envpath = NULL;
 
 
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	/* Calculate zip archive path */
 	if (dllpath[0])		/* use name of python DLL */
 		strncpy(zip_path, dllpath, MAXPATHLEN);
@@ -514,7 +514,7 @@
 		bufsz = 0;
 	bufsz += strlen(PYTHONPATH) + 1;
 	bufsz += strlen(argv0_path) + 1;
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (userpath)
 		bufsz += strlen(userpath) + 1;
 	if (machinepath)
@@ -536,7 +536,7 @@
 			fprintf(stderr, "Using default static path.\n");
 			module_search_path = PYTHONPATH;
 		}
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 		if (machinepath)
 			free(machinepath);
 		if (userpath)
@@ -550,7 +550,7 @@
 		buf = strchr(buf, '\0');
 		*buf++ = DELIM;
 	}
-#ifdef MS_WINDOWS
+#if defined(MS_WINDOWS) || defined(__MINGW32__)
 	if (zip_path[0]) {
 		strcpy(buf, zip_path);
 		buf = strchr(buf, '\0');
--- misc/Python-2.3.4/PCbuild/_bsddb.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_bsddb.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,48 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _bsddb.mak
+
+..\Modules\_bsddb.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_bsddb.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_bsddb.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,238 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_bsddb - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_bsddb - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_bsddb
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_bsddb.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_bsddb.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_bsddb.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_bsddb.exp"
+	-@erase "$(OUTDIR)\_bsddb.lib"
+	-@erase "$(OUTDIR)\_bsddb.pdb"
+	-@erase "$(OUTDIR)\_bsddb.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "..\..\db-4.1.25\build_win32" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\_bsddb.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_bsddb.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib ..\..\db-4.1.25\build_win32\Release_static\libdb41s.lib /nologo /base:"0x1e180000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\_bsddb.pdb" /debug /machine:I386 /nodefaultlib:"msvcrt" /out:"$(OUTDIR)\_bsddb.pyd" /implib:"$(OUTDIR)\_bsddb.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_bsddb.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_bsddb.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_bsddb - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_bsddb
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_bsddb_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_bsddb_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_bsddb.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_bsddb_d.exp"
+	-@erase "$(OUTDIR)\_bsddb_d.ilk"
+	-@erase "$(OUTDIR)\_bsddb_d.lib"
+	-@erase "$(OUTDIR)\_bsddb_d.pdb"
+	-@erase "$(OUTDIR)\_bsddb_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "..\..\db-4.1.25\build_win32" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\_bsddb.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_bsddb.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib ..\..\db-4.1.25\build_win32\Release_static\libdb41s.lib /nologo /base:"0x1e180000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\_bsddb_d.pdb" /debug /machine:I386 /nodefaultlib:"msvcrtd" /out:"$(OUTDIR)\_bsddb_d.pyd" /implib:"$(OUTDIR)\_bsddb_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\_bsddb.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_bsddb_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_bsddb.dep")
+!INCLUDE "_bsddb.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_bsddb.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_bsddb - Win32 Release" || "$(CFG)" == "_bsddb - Win32 Debug"
+
+!IF  "$(CFG)" == "_bsddb - Win32 Release"
+
+"pythoncore - Win32 Release" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" 
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN 
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_bsddb - Win32 Debug"
+
+"pythoncore - Win32 Debug" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" 
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN 
+   cd "."
+
+!ENDIF 
+
+SOURCE=..\Modules\_bsddb.c
+
+"$(INTDIR)\_bsddb.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF 
+
--- misc/Python-2.3.4/PCbuild/_csv.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_csv.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,49 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _csv.mak
+
+..\Modules\_csv.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_csv.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_csv.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,237 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_csv - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_csv - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_csv
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_csv.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_csv.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_csv.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_csv.exp"
+	-@erase "$(OUTDIR)\_csv.lib"
+	-@erase "$(OUTDIR)\_csv.pdb"
+	-@erase "$(OUTDIR)\_csv.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "C:\Program Files\Tcl\include" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\_csv.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_csv.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1d190000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\_csv.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_csv.pyd" /implib:"$(OUTDIR)\_csv.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_csv.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_csv.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_csv - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_csv
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_csv_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_csv_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_csv.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_csv_d.exp"
+	-@erase "$(OUTDIR)\_csv_d.ilk"
+	-@erase "$(OUTDIR)\_csv_d.lib"
+	-@erase "$(OUTDIR)\_csv_d.pdb"
+	-@erase "$(OUTDIR)\_csv_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "C:\Program Files\Tcl\include" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\_csv.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_csv.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1d190000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\_csv_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_csv_d.pyd" /implib:"$(OUTDIR)\_csv_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\_csv.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_csv_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_csv.dep")
+!INCLUDE "_csv.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_csv.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_csv - Win32 Release" || "$(CFG)" == "_csv - Win32 Debug"
+
+!IF  "$(CFG)" == "_csv - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_csv - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\_csv.c
+
+"$(INTDIR)\_csv.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/_socket.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_socket.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,53 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _socket.mak
+
+..\Modules\socketmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\addrinfo.h"\
+	"..\Modules\getaddrinfo.c"\
+	"..\Modules\getnameinfo.c"\
+	"..\Modules\socketmodule.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_socket.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_socket.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,237 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_socket - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_socket - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_socket
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_socket.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_socket.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\socketmodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_socket.exp"
+	-@erase "$(OUTDIR)\_socket.lib"
+	-@erase "$(OUTDIR)\_socket.pdb"
+	-@erase "$(OUTDIR)\_socket.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\_socket.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_socket.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=$(ADDITIONALLIBS) user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib wsock32.lib /nologo /base:"0x1e1D0000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\_socket.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_socket.pyd" /implib:"$(OUTDIR)\_socket.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\socketmodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_socket.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_socket - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_socket
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_socket_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_socket_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\socketmodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_socket_d.exp"
+	-@erase "$(OUTDIR)\_socket_d.ilk"
+	-@erase "$(OUTDIR)\_socket_d.lib"
+	-@erase "$(OUTDIR)\_socket_d.pdb"
+	-@erase "$(OUTDIR)\_socket_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\_socket.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_socket.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib wsock32.lib /nologo /base:"0x1e1D0000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\_socket_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_socket_d.pyd" /implib:"$(OUTDIR)\_socket_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\socketmodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_socket_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_socket.dep")
+!INCLUDE "_socket.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_socket.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_socket - Win32 Release" || "$(CFG)" == "_socket - Win32 Debug"
+
+!IF  "$(CFG)" == "_socket - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_socket - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\socketmodule.c
+
+"$(INTDIR)\socketmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/_sre.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_sre.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,51 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _sre.mak
+
+..\Modules\_sre.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\sre.h"\
+	"..\Modules\sre_constants.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_sre.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_sre.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,237 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_sre - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_sre - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_sre
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_sre.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_sre.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_sre.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_sre.exp"
+	-@erase "$(OUTDIR)\_sre.lib"
+	-@erase "$(OUTDIR)\_sre.pdb"
+	-@erase "$(OUTDIR)\_sre.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "C:\Program Files\Tcl\include" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\_sre.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_sre.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1e0000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\_sre.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_sre.pyd" /implib:"$(OUTDIR)\_sre.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_sre.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_sre.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_sre - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_sre
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_sre_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_sre_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_sre.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_sre_d.exp"
+	-@erase "$(OUTDIR)\_sre_d.ilk"
+	-@erase "$(OUTDIR)\_sre_d.lib"
+	-@erase "$(OUTDIR)\_sre_d.pdb"
+	-@erase "$(OUTDIR)\_sre_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "C:\Program Files\Tcl\include" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\_sre.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_sre.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1e0000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\_sre_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_sre_d.pyd" /implib:"$(OUTDIR)\_sre_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\_sre.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_sre_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_sre.dep")
+!INCLUDE "_sre.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_sre.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_sre - Win32 Release" || "$(CFG)" == "_sre - Win32 Debug"
+
+!IF  "$(CFG)" == "_sre - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_sre - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\_sre.c
+
+"$(INTDIR)\_sre.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/_symtable.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_symtable.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,50 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _symtable.mak
+
+..\Modules\symtablemodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\symtable.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_symtable.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_symtable.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,236 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_symtable - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_symtable - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_symtable
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_symtable.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_symtable.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\symtablemodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(OUTDIR)\_symtable.exp"
+	-@erase "$(OUTDIR)\_symtable.lib"
+	-@erase "$(OUTDIR)\_symtable.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\_symtable.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_symtable.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e100000" /dll /incremental:no /pdb:"$(OUTDIR)\_symtable.pdb" /machine:I386 /out:"$(OUTDIR)\_symtable.pyd" /implib:"$(OUTDIR)\_symtable.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\symtablemodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_symtable.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_symtable - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_symtable
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_symtable_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_symtable_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\symtablemodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_symtable_d.exp"
+	-@erase "$(OUTDIR)\_symtable_d.ilk"
+	-@erase "$(OUTDIR)\_symtable_d.lib"
+	-@erase "$(OUTDIR)\_symtable_d.pdb"
+	-@erase "$(OUTDIR)\_symtable_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\_symtable.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_symtable.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e100000" /dll /incremental:yes /pdb:"$(OUTDIR)\_symtable_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_symtable_d.pyd" /implib:"$(OUTDIR)\_symtable_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\symtablemodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_symtable_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_symtable.dep")
+!INCLUDE "_symtable.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_symtable.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_symtable - Win32 Release" || "$(CFG)" == "_symtable - Win32 Debug"
+
+!IF  "$(CFG)" == "_symtable - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" 
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN 
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_symtable - Win32 Debug"
+
+"pythoncore - Win32 Debug" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" 
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" : 
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN 
+   cd "."
+
+!ENDIF 
+
+SOURCE=..\Modules\symtablemodule.c
+
+"$(INTDIR)\symtablemodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF 
+
--- misc/Python-2.3.4/PCbuild/_testcapi.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_testcapi.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,50 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _testcapi.mak
+
+..\Modules\_testcapimodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\testcapi_long.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_testcapi.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_testcapi.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,235 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_testcapi - Win32 Debug
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_testcapi - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_testcapi
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_testcapi.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_testcapi.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_testcapimodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(OUTDIR)\_testcapi.exp"
+	-@erase "$(OUTDIR)\_testcapi.lib"
+	-@erase "$(OUTDIR)\_testcapi.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\_testcapi.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_testcapi.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1F0000" /dll /incremental:no /pdb:"$(OUTDIR)\_testcapi.pdb" /machine:I386 /out:"$(OUTDIR)\_testcapi.pyd" /implib:"$(OUTDIR)\_testcapi.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_testcapimodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_testcapi.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_testcapi - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_testcapi
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_testcapi_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_testcapi_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_testcapimodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_testcapi_d.exp"
+	-@erase "$(OUTDIR)\_testcapi_d.ilk"
+	-@erase "$(OUTDIR)\_testcapi_d.lib"
+	-@erase "$(OUTDIR)\_testcapi_d.pdb"
+	-@erase "$(OUTDIR)\_testcapi_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\_testcapi.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_testcapi.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1F0000" /dll /incremental:yes /pdb:"$(OUTDIR)\_testcapi_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_testcapi_d.pyd" /implib:"$(OUTDIR)\_testcapi_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\_testcapimodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_testcapi_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_testcapi.dep")
+!INCLUDE "_testcapi.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_testcapi.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_testcapi - Win32 Release" || "$(CFG)" == "_testcapi - Win32 Debug"
+
+!IF  "$(CFG)" == "_testcapi - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_testcapi - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\_testcapimodule.c
+
+"$(INTDIR)\_testcapimodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/_tkinter.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_tkinter.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,49 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von _tkinter.mak
+
+..\Modules\_tkinter.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/_tkinter.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/_tkinter.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,247 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=_tkinter - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "_tkinter - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\_tkinter
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_tkinter_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_tkinter_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_tkinter.obj"
+	-@erase "$(INTDIR)\tkappinit.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_tkinter_d.exp"
+	-@erase "$(OUTDIR)\_tkinter_d.ilk"
+	-@erase "$(OUTDIR)\_tkinter_d.lib"
+	-@erase "$(OUTDIR)\_tkinter_d.pdb"
+	-@erase "$(OUTDIR)\_tkinter_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\..\tcl84\include" /I "..\Include" /I "..\PC" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /D "WITH_APPINIT" /Fp"$(INTDIR)\_tkinter.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_tkinter.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=..\..\tcl84\lib\tk84.lib ..\..\tcl84\lib\tcl84.lib odbc32.lib odbccp32.lib user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /base:"0x1e190000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\_tkinter_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_tkinter_d.pyd" /implib:"$(OUTDIR)\_tkinter_d.lib" /pdbtype:sept /libpath:"C:\Program Files\Tcl\lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_tkinter.obj" \
+	"$(INTDIR)\tkappinit.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_tkinter_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "_tkinter - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\_tkinter
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_tkinter.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_tkinter.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_tkinter.obj"
+	-@erase "$(INTDIR)\tkappinit.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_tkinter.exp"
+	-@erase "$(OUTDIR)\_tkinter.lib"
+	-@erase "$(OUTDIR)\_tkinter.pdb"
+	-@erase "$(OUTDIR)\_tkinter.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\..\tcl84\include" /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "WITH_APPINIT" /Fp"$(INTDIR)\_tkinter.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\_tkinter.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=..\..\tcl84\lib\tk84.lib ..\..\tcl84\lib\tcl84.lib odbc32.lib odbccp32.lib user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /base:"0x1e190000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\_tkinter.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_tkinter.pyd" /implib:"$(OUTDIR)\_tkinter.lib" /libpath:"C:\Program Files\Tcl\lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_tkinter.obj" \
+	"$(INTDIR)\tkappinit.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_tkinter.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("_tkinter.dep")
+!INCLUDE "_tkinter.dep"
+!ELSE
+!MESSAGE Warning: cannot find "_tkinter.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "_tkinter - Win32 Debug" || "$(CFG)" == "_tkinter - Win32 Release"
+
+!IF  "$(CFG)" == "_tkinter - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "_tkinter - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\_tkinter.c
+
+"$(INTDIR)\_tkinter.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\tkappinit.c
+
+"$(INTDIR)\tkappinit.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/bz2.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/bz2.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,50 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von bz2.mak
+
+..\Modules\bz2module.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/bz2.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/bz2.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,187 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=bz2 - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "bz2 - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\bz2
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+ALL : "$(OUTDIR)\bz2.pyd"
+
+
+CLEAN :
+	-@erase "$(INTDIR)\bz2module.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\bz2.exp"
+	-@erase "$(OUTDIR)\bz2.lib"
+	-@erase "$(OUTDIR)\bz2.pdb"
+	-@erase "$(OUTDIR)\bz2.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "..\..\bzip2-1.0.2" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\bz2.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\bz2.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=..\..\bzip2-1.0.2\libbz2.lib /nologo /base:"0x1D170000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\bz2.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\bz2.pyd" /implib:"$(OUTDIR)\bz2.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\bz2module.obj"
+
+"$(OUTDIR)\bz2.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "bz2 - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\bz2
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+ALL : "$(OUTDIR)\bz2_d.pyd"
+
+
+CLEAN :
+	-@erase "$(INTDIR)\bz2module.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\bz2_d.exp"
+	-@erase "$(OUTDIR)\bz2_d.ilk"
+	-@erase "$(OUTDIR)\bz2_d.lib"
+	-@erase "$(OUTDIR)\bz2_d.pdb"
+	-@erase "$(OUTDIR)\bz2_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "..\..\bzip2-1.0.2" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\bz2.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\bz2.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=..\..\bzip2-1.0.2\libbz2.lib /nologo /base:"0x1D170000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\bz2_d.pdb" /debug /machine:I386 /nodefaultlib:"msvcrt" /nodefaultlib:"libc" /out:"$(OUTDIR)\bz2_d.pyd" /implib:"$(OUTDIR)\bz2_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\bz2module.obj"
+
+"$(OUTDIR)\bz2_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("bz2.dep")
+!INCLUDE "bz2.dep"
+!ELSE
+!MESSAGE Warning: cannot find "bz2.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "bz2 - Win32 Release" || "$(CFG)" == "bz2 - Win32 Debug"
+SOURCE=..\Modules\bz2module.c
+
+"$(INTDIR)\bz2module.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
+
--- misc/Python-2.3.4/PCbuild/datetime.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/datetime.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,50 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von datetime.mak
+
+..\Modules\datetimemodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\datetime.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/datetime.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/datetime.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,239 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=datetime - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "datetime - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\datetime
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!MESSAGE datetime - Win32 Release
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\datetime.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\datetime.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\datetimemodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\datetime.exp"
+	-@erase "$(OUTDIR)\datetime.lib"
+	-@erase "$(OUTDIR)\datetime.pdb"
+	-@erase "$(OUTDIR)\datetime.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\datetime.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\datetime.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib wsock32.lib /nologo /base:"0x1D180000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\datetime.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\datetime.pyd" /implib:"$(OUTDIR)\datetime.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\datetimemodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\datetime.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "datetime - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\datetime
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\datetime_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\datetime_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\datetimemodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\datetime_d.exp"
+	-@erase "$(OUTDIR)\datetime_d.ilk"
+	-@erase "$(OUTDIR)\datetime_d.lib"
+	-@erase "$(OUTDIR)\datetime_d.pdb"
+	-@erase "$(OUTDIR)\datetime_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\datetime.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\datetime.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib wsock32.lib /nologo /base:"0x1D180000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\datetime_d.pdb" /debug /machine:I386 /nodefaultlib:"libc" /nodefaultlib:"msvcrt" /out:"$(OUTDIR)\datetime_d.pyd" /implib:"$(OUTDIR)\datetime_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\datetimemodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\datetime_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("datetime.dep")
+!INCLUDE "datetime.dep"
+!ELSE
+!MESSAGE Warning: cannot find "datetime.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "datetime - Win32 Release" || "$(CFG)" == "datetime - Win32 Debug"
+
+!IF  "$(CFG)" == "datetime - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" EXFLAGS="$(EXFLAGS)"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "datetime - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" EXFLAGS="$(EXFLAGS)"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\datetimemodule.c
+
+"$(INTDIR)\datetimemodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/make_versioninfo.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/make_versioninfo.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,5 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von make_versioninfo.mak
+
+..\PC\make_versioninfo.c : \
+	"..\Include\patchlevel.h"\
+	
--- misc/Python-2.3.4/PCbuild/make_versioninfo.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/make_versioninfo.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,220 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=make_versioninfo - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "make_versioninfo - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\make_versioninfo
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+ALL : "$(OUTDIR)\make_versioninfo.exe" "..\PC\pythonnt_rc.h"
+
+
+CLEAN :
+	-@erase "$(INTDIR)\make_versioninfo.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\make_versioninfo.exe"
+	-@erase "$(OUTDIR)\make_versioninfo.pdb"
+	-@erase "..\PC\pythonnt_rc.h"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+#   if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+    if not exist "$(INTDIR)/$(NULL)" mkdir .\x86-temp-release && mkdir .\x86-temp-release\make_versioninfo
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /Fp"$(INTDIR)\make_versioninfo.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\make_versioninfo.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /base:"0x1d000000" /subsystem:console /incremental:no /pdb:"$(OUTDIR)\make_versioninfo.pdb" /debug /machine:I386 /out:"$(OUTDIR)\make_versioninfo.exe"
+LINK32_OBJS= \
+	"$(INTDIR)\make_versioninfo.obj"
+
+"$(OUTDIR)\make_versioninfo.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+InputPath=.\make_versioninfo.exe
+SOURCE="$(InputPath)"
+
+"..\PC\pythonnt_rc.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
+	<<tempfile.bat
+	@echo off
+	.\make_versioninfo.exe >..\PC\pythonnt_rc.h
+<<
+
+
+!ELSEIF  "$(CFG)" == "make_versioninfo - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\make_versioninfo
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+ALL : "$(OUTDIR)\make_versioninfo_d.exe" "$(OUTDIR)\make_versioninfo.bsc" "..\PC\pythonnt_rc_d.h"
+
+
+CLEAN :
+	-@erase "$(INTDIR)\make_versioninfo.obj"
+	-@erase "$(INTDIR)\make_versioninfo.sbr"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\make_versioninfo.bsc"
+	-@erase "$(OUTDIR)\make_versioninfo_d.exe"
+	-@erase "$(OUTDIR)\make_versioninfo_d.ilk"
+	-@erase "$(OUTDIR)\make_versioninfo_d.pdb"
+	-@erase "..\PC\pythonnt_rc_d.h"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /FR"$(INTDIR)\\" /Fp"$(INTDIR)\make_versioninfo.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\make_versioninfo.bsc"
+BSC32_SBRS= \
+	"$(INTDIR)\make_versioninfo.sbr"
+
+"$(OUTDIR)\make_versioninfo.bsc" : "$(OUTDIR)" $(BSC32_SBRS)
+    $(BSC32) @<<
+  $(BSC32_FLAGS) $(BSC32_SBRS)
+<<
+
+LINK32=link.exe
+LINK32_FLAGS=odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /base:"0x1d000000" /subsystem:console /incremental:yes /pdb:"$(OUTDIR)\make_versioninfo_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\make_versioninfo_d.exe" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\make_versioninfo.obj"
+
+"$(OUTDIR)\make_versioninfo_d.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+InputPath=.\make_versioninfo_d.exe
+SOURCE="$(InputPath)"
+
+"..\PC\pythonnt_rc_d.h" : $(SOURCE) "$(INTDIR)" "$(OUTDIR)"
+	<<tempfile.bat
+	@echo off
+	.\make_versioninfo_d.exe >..\PC\pythonnt_rc_d.h
+<<
+
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("make_versioninfo.dep")
+!INCLUDE "make_versioninfo.dep"
+!ELSE
+!MESSAGE Warning: cannot find "make_versioninfo.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "make_versioninfo - Win32 Release" || "$(CFG)" == "make_versioninfo - Win32 Debug"
+SOURCE=..\PC\make_versioninfo.c
+
+!IF  "$(CFG)" == "make_versioninfo - Win32 Release"
+
+
+"$(INTDIR)\make_versioninfo.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+!ELSEIF  "$(CFG)" == "make_versioninfo - Win32 Debug"
+
+
+"$(INTDIR)\make_versioninfo.obj"	"$(INTDIR)\make_versioninfo.sbr" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+!ENDIF
+
+
+!ENDIF
+
--- misc/Python-2.3.4/PCbuild/mmap.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/mmap.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,48 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von mmap.mak
+
+..\Modules\mmapmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/mmap.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/mmap.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,235 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=mmap - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "mmap - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\mmap
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\mmap.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\mmap.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\mmapmodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(OUTDIR)\mmap.exp"
+	-@erase "$(OUTDIR)\mmap.lib"
+	-@erase "$(OUTDIR)\mmap.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\mmap.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\mmap.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1F0000" /dll /incremental:no /pdb:"$(OUTDIR)\mmap.pdb" /machine:I386 /out:"$(OUTDIR)\mmap.pyd" /implib:"$(OUTDIR)\mmap.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\mmapmodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\mmap.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "mmap - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\mmap
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\mmap_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\mmap_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\mmapmodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\mmap_d.exp"
+	-@erase "$(OUTDIR)\mmap_d.ilk"
+	-@erase "$(OUTDIR)\mmap_d.lib"
+	-@erase "$(OUTDIR)\mmap_d.pdb"
+	-@erase "$(OUTDIR)\mmap_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\mmap.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\mmap.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1F0000" /dll /incremental:yes /pdb:"$(OUTDIR)\mmap_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\mmap_d.pyd" /implib:"$(OUTDIR)\mmap_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\mmapmodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\mmap_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("mmap.dep")
+!INCLUDE "mmap.dep"
+!ELSE
+!MESSAGE Warning: cannot find "mmap.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "mmap - Win32 Release" || "$(CFG)" == "mmap - Win32 Debug"
+
+!IF  "$(CFG)" == "mmap - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "mmap - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\mmapmodule.c
+
+"$(INTDIR)\mmapmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/parser.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/parser.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,53 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von parser.mak
+
+..\Modules\parsermodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/parser.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/parser.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,237 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=parser - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "parser - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\parser
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\parser.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\parser.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\parsermodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\parser.exp"
+	-@erase "$(OUTDIR)\parser.lib"
+	-@erase "$(OUTDIR)\parser.pdb"
+	-@erase "$(OUTDIR)\parser.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "C:\Program Files\Tcl\include" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\parser.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\parser.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1A0000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\parser.pdb" /debug /machine:I386 /out:"$(OUTDIR)\parser.pyd" /implib:"$(OUTDIR)\parser.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\parsermodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\parser.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "parser - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\parser
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\parser_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\parser_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\parsermodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\parser_d.exp"
+	-@erase "$(OUTDIR)\parser_d.ilk"
+	-@erase "$(OUTDIR)\parser_d.lib"
+	-@erase "$(OUTDIR)\parser_d.pdb"
+	-@erase "$(OUTDIR)\parser_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "C:\Program Files\Tcl\include" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\parser.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\parser.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1A0000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\parser_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\parser_d.pyd" /implib:"$(OUTDIR)\parser_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\parsermodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\parser_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("parser.dep")
+!INCLUDE "parser.dep"
+!ELSE
+!MESSAGE Warning: cannot find "parser.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "parser - Win32 Release" || "$(CFG)" == "parser - Win32 Debug"
+
+!IF  "$(CFG)" == "parser - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "parser - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\parsermodule.c
+
+"$(INTDIR)\parsermodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/pyexpat.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/pyexpat.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,85 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von pyexpat.mak
+
+..\Modules\pyexpat.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\frameobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\expat\expat.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\expat\xmlparse.c : \
+	"..\Modules\expat\expat.h"\
+	"..\Modules\expat\internal.h"\
+	"..\Modules\expat\macconfig.h"\
+	"..\Modules\expat\winconfig.h"\
+	"..\Modules\expat\xmlrole.h"\
+	"..\Modules\expat\xmltok.h"\
+	
+
+..\Modules\expat\xmlrole.c : \
+	"..\Modules\expat\ascii.h"\
+	"..\Modules\expat\internal.h"\
+	"..\Modules\expat\macconfig.h"\
+	"..\Modules\expat\winconfig.h"\
+	"..\Modules\expat\xmlrole.h"\
+	"..\Modules\expat\xmltok.h"\
+	
+
+..\Modules\expat\xmltok.c : \
+	"..\Modules\expat\ascii.h"\
+	"..\Modules\expat\asciitab.h"\
+	"..\Modules\expat\iasciitab.h"\
+	"..\Modules\expat\internal.h"\
+	"..\Modules\expat\latin1tab.h"\
+	"..\Modules\expat\macconfig.h"\
+	"..\Modules\expat\nametab.h"\
+	"..\Modules\expat\utf8tab.h"\
+	"..\Modules\expat\winconfig.h"\
+	"..\Modules\expat\xmltok.h"\
+	"..\Modules\expat\xmltok_impl.c"\
+	"..\Modules\expat\xmltok_impl.h"\
+	"..\Modules\expat\xmltok_ns.c"\
+	
--- misc/Python-2.3.4/PCbuild/pyexpat.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/pyexpat.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,268 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=pyexpat - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "pyexpat - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\pyexpat
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\pyexpat.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\pyexpat.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\pyexpat.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\xmlparse.obj"
+	-@erase "$(INTDIR)\xmlrole.obj"
+	-@erase "$(INTDIR)\xmltok.obj"
+	-@erase "$(OUTDIR)\pyexpat.exp"
+	-@erase "$(OUTDIR)\pyexpat.lib"
+	-@erase "$(OUTDIR)\pyexpat.pdb"
+	-@erase "$(OUTDIR)\pyexpat.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "..\Modules\expat" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "XML_NS" /D "XML_DTD" /D BYTEORDER=1234 /D XML_CONTEXT_BYTES=1024 /D "XML_STATIC" /D "HAVE_MEMMOVE" /Fp"$(INTDIR)\pyexpat.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\pyexpat.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1D100000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\pyexpat.pdb" /debug /machine:I386 /out:"$(OUTDIR)\pyexpat.pyd" /implib:"$(OUTDIR)\pyexpat.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\pyexpat.obj" \
+	"$(INTDIR)\xmlparse.obj" \
+	"$(INTDIR)\xmlrole.obj" \
+	"$(INTDIR)\xmltok.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\pyexpat.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "pyexpat - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\pyexpat
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\pyexpat_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\pyexpat_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\pyexpat.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\xmlparse.obj"
+	-@erase "$(INTDIR)\xmlrole.obj"
+	-@erase "$(INTDIR)\xmltok.obj"
+	-@erase "$(OUTDIR)\pyexpat_d.exp"
+	-@erase "$(OUTDIR)\pyexpat_d.ilk"
+	-@erase "$(OUTDIR)\pyexpat_d.lib"
+	-@erase "$(OUTDIR)\pyexpat_d.pdb"
+	-@erase "$(OUTDIR)\pyexpat_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "..\Modules\expat" /D "_DEBUG" /D "HAVE_EXPAT_H" /D "WIN32" /D "_WINDOWS" /D "XML_NS" /D "XML_DTD" /D BYTEORDER=1234 /D XML_CONTEXT_BYTES=1024 /D "XML_STATIC" /D "HAVE_MEMMOVE" /Fp"$(INTDIR)\pyexpat.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\pyexpat.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1D100000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\pyexpat_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\pyexpat_d.pyd" /implib:"$(OUTDIR)\pyexpat_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\pyexpat.obj" \
+	"$(INTDIR)\xmlparse.obj" \
+	"$(INTDIR)\xmlrole.obj" \
+	"$(INTDIR)\xmltok.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\pyexpat_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("pyexpat.dep")
+!INCLUDE "pyexpat.dep"
+!ELSE
+!MESSAGE Warning: cannot find "pyexpat.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "pyexpat - Win32 Release" || "$(CFG)" == "pyexpat - Win32 Debug"
+
+!IF  "$(CFG)" == "pyexpat - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "pyexpat - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\pyexpat.c
+
+"$(INTDIR)\pyexpat.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\expat\xmlparse.c
+
+"$(INTDIR)\xmlparse.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\expat\xmlrole.c
+
+"$(INTDIR)\xmlrole.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\expat\xmltok.c
+
+"$(INTDIR)\xmltok.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
+
--- misc/Python-2.3.4/PCbuild/python.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/python.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,52 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von python.mak
+
+..\Modules\python.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\PC\python_exe.rc : \
+	"..\PC\pycon.ico"\
+	
--- misc/Python-2.3.4/PCbuild/python.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/python.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,271 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=python - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "python - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\python
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\python.exe"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\python.exe"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\python.obj"
+	-@erase "$(INTDIR)\python_exe.res"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\python.exe"
+	-@erase "$(OUTDIR)\python.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_CONSOLE" /D "_MBCS" /Fp"$(INTDIR)\python.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+RSC=rc.exe
+RSC_PROJ=/l 0x409 /fo"$(INTDIR)\python_exe.res" /d "NDEBUG"
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\python.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /base:"0x1d000000" /subsystem:console /incremental:no /pdb:"$(OUTDIR)\python.pdb" /debug /machine:I386 /out:"$(OUTDIR)\python.exe"
+LINK32_OBJS= \
+	"$(INTDIR)\python.obj" \
+	"$(INTDIR)\python_exe.res" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\python.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "python - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\python
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\python_d.exe" "$(OUTDIR)\python.bsc"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\python_d.exe" "$(OUTDIR)\python.bsc"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\python.obj"
+	-@erase "$(INTDIR)\python.sbr"
+	-@erase "$(INTDIR)\python_exe.res"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\python.bsc"
+	-@erase "$(OUTDIR)\python_d.exe"
+	-@erase "$(OUTDIR)\python_d.ilk"
+	-@erase "$(OUTDIR)\python_d.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_CONSOLE" /D "_MBCS" /FR"$(INTDIR)\\" /Fp"$(INTDIR)\python.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+RSC=rc.exe
+RSC_PROJ=/l 0x409 /fo"$(INTDIR)\python_exe.res" /i "..\Include" /d "_DEBUG"
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\python.bsc"
+BSC32_SBRS= \
+	"$(INTDIR)\python.sbr"
+
+"$(OUTDIR)\python.bsc" : "$(OUTDIR)" $(BSC32_SBRS)
+    $(BSC32) @<<
+  $(BSC32_FLAGS) $(BSC32_SBRS)
+<<
+
+LINK32=link.exe
+LINK32_FLAGS=odbc32.lib odbccp32.lib kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib /nologo /base:"0x1d000000" /subsystem:console /incremental:yes /pdb:"$(OUTDIR)\python_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\python_d.exe" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\python.obj" \
+	"$(INTDIR)\python_exe.res" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\python_d.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("python.dep")
+!INCLUDE "python.dep"
+!ELSE
+!MESSAGE Warning: cannot find "python.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "python - Win32 Release" || "$(CFG)" == "python - Win32 Debug"
+
+!IF  "$(CFG)" == "python - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "python - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\python.c
+
+!IF  "$(CFG)" == "python - Win32 Release"
+
+
+"$(INTDIR)\python.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+!ELSEIF  "$(CFG)" == "python - Win32 Debug"
+
+
+"$(INTDIR)\python.obj"	"$(INTDIR)\python.sbr" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+!ENDIF
+
+SOURCE=..\PC\python_exe.rc
+
+!IF  "$(CFG)" == "python - Win32 Release"
+
+
+"$(INTDIR)\python_exe.res" : $(SOURCE) "$(INTDIR)"
+	$(RSC) /l 0x409 /fo"$(INTDIR)\python_exe.res" /i "\tmp\Python-2.3.4\PC" /d "NDEBUG" $(SOURCE)
+
+
+!ELSEIF  "$(CFG)" == "python - Win32 Debug"
+
+
+"$(INTDIR)\python_exe.res" : $(SOURCE) "$(INTDIR)"
+	$(RSC) /l 0x409 /fo"$(INTDIR)\python_exe.res" /i "..\Include" /i "\tmp\Python-2.3.4\PC" /d "_DEBUG" $(SOURCE)
+
+
+!ENDIF
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/pythoncore.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/pythoncore.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,5452 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von pythoncore.mak
+
+..\Modules\_codecsmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\_hotshot.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\frameobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\_localemodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\_randommodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\_weakref.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\abstract.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longintrepr.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\acceler.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\arraymodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\audioop.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\binascii.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\bitset.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\bltinmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\boolobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\bufferobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\cellobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\ceval.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\frameobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\opcode.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\classobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\cmathmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\cobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\codecs.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\compile.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\opcode.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\symtable.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\complexobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\PC\config.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\cPickle.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\cStringIO.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\cStringIO.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\cStringIO.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\descrobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\dictobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\PC\dl_nt.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\dynload_win.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	"..\Python\importdl.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\enumobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\errnomodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\errors.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\exceptions.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\fileobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\floatobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\frameobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\frameobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\opcode.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\frozen.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\funcobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\future.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\symtable.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\gcmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\getargs.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\getbuildinfo.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\getcompiler.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\getcopyright.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\getmtime.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\PC\getpathp.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\getplatform.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\getversion.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\graminit.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\grammar1.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\imageop.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\import.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\marshal.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	"..\Python\importdl.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\PC\import_nt.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	"..\Python\importdl.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\importdl.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	"..\Python\importdl.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\intobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\iterobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\itertoolsmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\listnode.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\listobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\longobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longintrepr.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\main.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pygetopt.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\marshal.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longintrepr.h"\
+	"..\Include\longobject.h"\
+	"..\Include\marshal.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\mathmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longintrepr.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\md5c.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\md5.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\md5module.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\md5.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\metagrammar.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\metagrammar.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgen.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\methodobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\modsupport.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\moduleobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\PC\msvcrtmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\myreadline.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\mysnprintf.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\mystrtoul.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\node.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\object.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\obmalloc.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\operator.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\parser.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\parsetok.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\parsetok.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Parser\tokenizer.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\pcremodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\pcre-int.h"\
+	"..\Modules\pcre.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\posixmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structseq.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\pyfpe.c : \
+	"..\Include\pyfpe.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\pypcre.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\pcre-int.h"\
+	"..\Modules\pcre.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\pystate.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\pythonrun.c : \
+	"..\Include\abstract.h"\
+	"..\Include\bitset.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\grammar.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\marshal.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\node.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\parsetok.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\symtable.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\rangeobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\regexmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\regexpr.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\regexpr.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\regexpr.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\rgbimgmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\rotormodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\shamodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\signalmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\sliceobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\stringobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\stropmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\structmember.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\structmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\structseq.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\structseq.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\symtable.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\graminit.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\symtable.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\sysmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\eval.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\frameobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\thread.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	"..\Python\thread_atheos.h"\
+	"..\Python\thread_beos.h"\
+	"..\Python\thread_cthread.h"\
+	"..\Python\thread_foobar.h"\
+	"..\Python\thread_lwp.h"\
+	"..\Python\thread_nt.h"\
+	"..\Python\thread_os2.h"\
+	"..\Python\thread_pth.h"\
+	"..\Python\thread_pthread.h"\
+	"..\Python\thread_sgi.h"\
+	"..\Python\thread_solaris.h"\
+	"..\Python\thread_wince.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\threadmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\timemodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structseq.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Parser\tokenizer.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\errcode.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pgenheaders.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\token.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Parser\tokenizer.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Python\traceback.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\frameobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\tupleobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\typeobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\unicodectype.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Objects\unicodetype_db.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\unicodeobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\ucnhash.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Objects\weakrefobject.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\xreadlinesmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\xxsubtype.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
+
+..\Modules\yuvconvert.c : \
+	"..\Modules\yuv.h"\
+	
+
+..\Modules\zipimport.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\compile.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\marshal.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\osdefs.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/pythoncore.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/pythoncore.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,1435 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=pythoncore - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "pythoncore - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\pythoncore
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\python23.dll"
+
+!ELSE
+
+ALL : "make_versioninfo - Win32 Release" "$(OUTDIR)\python23.dll"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"make_versioninfo - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_codecsmodule.obj"
+	-@erase "$(INTDIR)\_hotshot.obj"
+	-@erase "$(INTDIR)\_localemodule.obj"
+	-@erase "$(INTDIR)\_randommodule.obj"
+	-@erase "$(INTDIR)\_weakref.obj"
+	-@erase "$(INTDIR)\abstract.obj"
+	-@erase "$(INTDIR)\acceler.obj"
+	-@erase "$(INTDIR)\arraymodule.obj"
+	-@erase "$(INTDIR)\audioop.obj"
+	-@erase "$(INTDIR)\binascii.obj"
+	-@erase "$(INTDIR)\bitset.obj"
+	-@erase "$(INTDIR)\bltinmodule.obj"
+	-@erase "$(INTDIR)\boolobject.obj"
+	-@erase "$(INTDIR)\bufferobject.obj"
+	-@erase "$(INTDIR)\cellobject.obj"
+	-@erase "$(INTDIR)\ceval.obj"
+	-@erase "$(INTDIR)\classobject.obj"
+	-@erase "$(INTDIR)\cmathmodule.obj"
+	-@erase "$(INTDIR)\cobject.obj"
+	-@erase "$(INTDIR)\codecs.obj"
+	-@erase "$(INTDIR)\compile.obj"
+	-@erase "$(INTDIR)\complexobject.obj"
+	-@erase "$(INTDIR)\config.obj"
+	-@erase "$(INTDIR)\cPickle.obj"
+	-@erase "$(INTDIR)\cStringIO.obj"
+	-@erase "$(INTDIR)\descrobject.obj"
+	-@erase "$(INTDIR)\dictobject.obj"
+	-@erase "$(INTDIR)\dl_nt.obj"
+	-@erase "$(INTDIR)\dynload_win.obj"
+	-@erase "$(INTDIR)\enumobject.obj"
+	-@erase "$(INTDIR)\errnomodule.obj"
+	-@erase "$(INTDIR)\errors.obj"
+	-@erase "$(INTDIR)\exceptions.obj"
+	-@erase "$(INTDIR)\fileobject.obj"
+	-@erase "$(INTDIR)\floatobject.obj"
+	-@erase "$(INTDIR)\frameobject.obj"
+	-@erase "$(INTDIR)\frozen.obj"
+	-@erase "$(INTDIR)\funcobject.obj"
+	-@erase "$(INTDIR)\future.obj"
+	-@erase "$(INTDIR)\gcmodule.obj"
+	-@erase "$(INTDIR)\getargs.obj"
+	-@erase "$(INTDIR)\getbuildinfo.obj"
+	-@erase "$(INTDIR)\getcompiler.obj"
+	-@erase "$(INTDIR)\getcopyright.obj"
+	-@erase "$(INTDIR)\getmtime.obj"
+	-@erase "$(INTDIR)\getopt.obj"
+	-@erase "$(INTDIR)\getpathp.obj"
+	-@erase "$(INTDIR)\getplatform.obj"
+	-@erase "$(INTDIR)\getversion.obj"
+	-@erase "$(INTDIR)\graminit.obj"
+	-@erase "$(INTDIR)\grammar1.obj"
+	-@erase "$(INTDIR)\imageop.obj"
+	-@erase "$(INTDIR)\import.obj"
+	-@erase "$(INTDIR)\import_nt.obj"
+	-@erase "$(INTDIR)\importdl.obj"
+	-@erase "$(INTDIR)\intobject.obj"
+	-@erase "$(INTDIR)\iterobject.obj"
+	-@erase "$(INTDIR)\itertoolsmodule.obj"
+	-@erase "$(INTDIR)\listnode.obj"
+	-@erase "$(INTDIR)\listobject.obj"
+	-@erase "$(INTDIR)\longobject.obj"
+	-@erase "$(INTDIR)\main.obj"
+	-@erase "$(INTDIR)\marshal.obj"
+	-@erase "$(INTDIR)\mathmodule.obj"
+	-@erase "$(INTDIR)\md5c.obj"
+	-@erase "$(INTDIR)\md5module.obj"
+	-@erase "$(INTDIR)\metagrammar.obj"
+	-@erase "$(INTDIR)\methodobject.obj"
+	-@erase "$(INTDIR)\modsupport.obj"
+	-@erase "$(INTDIR)\moduleobject.obj"
+	-@erase "$(INTDIR)\msvcrtmodule.obj"
+	-@erase "$(INTDIR)\myreadline.obj"
+	-@erase "$(INTDIR)\mysnprintf.obj"
+	-@erase "$(INTDIR)\mystrtoul.obj"
+	-@erase "$(INTDIR)\node.obj"
+	-@erase "$(INTDIR)\object.obj"
+	-@erase "$(INTDIR)\obmalloc.obj"
+	-@erase "$(INTDIR)\operator.obj"
+	-@erase "$(INTDIR)\parser.obj"
+	-@erase "$(INTDIR)\parsetok.obj"
+	-@erase "$(INTDIR)\pcremodule.obj"
+	-@erase "$(INTDIR)\posixmodule.obj"
+	-@erase "$(INTDIR)\pyfpe.obj"
+	-@erase "$(INTDIR)\pypcre.obj"
+	-@erase "$(INTDIR)\pystate.obj"
+	-@erase "$(INTDIR)\python_nt.res"
+	-@erase "$(INTDIR)\pythonrun.obj"
+	-@erase "$(INTDIR)\rangeobject.obj"
+	-@erase "$(INTDIR)\regexmodule.obj"
+	-@erase "$(INTDIR)\regexpr.obj"
+	-@erase "$(INTDIR)\rgbimgmodule.obj"
+	-@erase "$(INTDIR)\rotormodule.obj"
+	-@erase "$(INTDIR)\shamodule.obj"
+	-@erase "$(INTDIR)\signalmodule.obj"
+	-@erase "$(INTDIR)\sliceobject.obj"
+	-@erase "$(INTDIR)\stringobject.obj"
+	-@erase "$(INTDIR)\stropmodule.obj"
+	-@erase "$(INTDIR)\structmember.obj"
+	-@erase "$(INTDIR)\structmodule.obj"
+	-@erase "$(INTDIR)\structseq.obj"
+	-@erase "$(INTDIR)\symtable.obj"
+	-@erase "$(INTDIR)\sysmodule.obj"
+	-@erase "$(INTDIR)\thread.obj"
+	-@erase "$(INTDIR)\threadmodule.obj"
+	-@erase "$(INTDIR)\timemodule.obj"
+	-@erase "$(INTDIR)\tokenizer.obj"
+	-@erase "$(INTDIR)\traceback.obj"
+	-@erase "$(INTDIR)\tupleobject.obj"
+	-@erase "$(INTDIR)\typeobject.obj"
+	-@erase "$(INTDIR)\unicodectype.obj"
+	-@erase "$(INTDIR)\unicodeobject.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\weakrefobject.obj"
+	-@erase "$(INTDIR)\xreadlinesmodule.obj"
+	-@erase "$(INTDIR)\xxsubtype.obj"
+	-@erase "$(INTDIR)\yuvconvert.obj"
+	-@erase "$(INTDIR)\zipimport.obj"
+	-@erase "$(OUTDIR)\python23.dll"
+	-@erase "$(OUTDIR)\python23.exp"
+	-@erase "$(OUTDIR)\python23.lib"
+	-@erase "$(OUTDIR)\python23.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "USE_DL_EXPORT" /Fp"$(INTDIR)\pythoncore.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /Zm200 /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o /win32 "NUL"
+RSC=rc.exe
+RSC_PROJ=/l 0x409 /fo"$(INTDIR)\python_nt.res" /i "..\Include" /d "NDEBUG"
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\pythoncore.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS= kernel32.lib user32.lib advapi32.lib shell32.lib /nologo /base:"0x1e000000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\python23.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\python23.dll" /implib:"$(OUTDIR)\python23.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_codecsmodule.obj" \
+	"$(INTDIR)\_hotshot.obj" \
+	"$(INTDIR)\_localemodule.obj" \
+	"$(INTDIR)\_randommodule.obj" \
+	"$(INTDIR)\_weakref.obj" \
+	"$(INTDIR)\abstract.obj" \
+	"$(INTDIR)\acceler.obj" \
+	"$(INTDIR)\arraymodule.obj" \
+	"$(INTDIR)\audioop.obj" \
+	"$(INTDIR)\binascii.obj" \
+	"$(INTDIR)\bitset.obj" \
+	"$(INTDIR)\bltinmodule.obj" \
+	"$(INTDIR)\boolobject.obj" \
+	"$(INTDIR)\bufferobject.obj" \
+	"$(INTDIR)\cellobject.obj" \
+	"$(INTDIR)\ceval.obj" \
+	"$(INTDIR)\classobject.obj" \
+	"$(INTDIR)\cmathmodule.obj" \
+	"$(INTDIR)\cobject.obj" \
+	"$(INTDIR)\codecs.obj" \
+	"$(INTDIR)\compile.obj" \
+	"$(INTDIR)\complexobject.obj" \
+	"$(INTDIR)\config.obj" \
+	"$(INTDIR)\cPickle.obj" \
+	"$(INTDIR)\cStringIO.obj" \
+	"$(INTDIR)\descrobject.obj" \
+	"$(INTDIR)\dictobject.obj" \
+	"$(INTDIR)\dl_nt.obj" \
+	"$(INTDIR)\dynload_win.obj" \
+	"$(INTDIR)\enumobject.obj" \
+	"$(INTDIR)\errnomodule.obj" \
+	"$(INTDIR)\errors.obj" \
+	"$(INTDIR)\exceptions.obj" \
+	"$(INTDIR)\fileobject.obj" \
+	"$(INTDIR)\floatobject.obj" \
+	"$(INTDIR)\frameobject.obj" \
+	"$(INTDIR)\frozen.obj" \
+	"$(INTDIR)\funcobject.obj" \
+	"$(INTDIR)\future.obj" \
+	"$(INTDIR)\gcmodule.obj" \
+	"$(INTDIR)\getargs.obj" \
+	"$(INTDIR)\getbuildinfo.obj" \
+	"$(INTDIR)\getcompiler.obj" \
+	"$(INTDIR)\getcopyright.obj" \
+	"$(INTDIR)\getmtime.obj" \
+	"$(INTDIR)\getopt.obj" \
+	"$(INTDIR)\getpathp.obj" \
+	"$(INTDIR)\getplatform.obj" \
+	"$(INTDIR)\getversion.obj" \
+	"$(INTDIR)\graminit.obj" \
+	"$(INTDIR)\grammar1.obj" \
+	"$(INTDIR)\imageop.obj" \
+	"$(INTDIR)\import.obj" \
+	"$(INTDIR)\import_nt.obj" \
+	"$(INTDIR)\importdl.obj" \
+	"$(INTDIR)\intobject.obj" \
+	"$(INTDIR)\iterobject.obj" \
+	"$(INTDIR)\itertoolsmodule.obj" \
+	"$(INTDIR)\listnode.obj" \
+	"$(INTDIR)\listobject.obj" \
+	"$(INTDIR)\longobject.obj" \
+	"$(INTDIR)\main.obj" \
+	"$(INTDIR)\marshal.obj" \
+	"$(INTDIR)\mathmodule.obj" \
+	"$(INTDIR)\md5c.obj" \
+	"$(INTDIR)\md5module.obj" \
+	"$(INTDIR)\metagrammar.obj" \
+	"$(INTDIR)\methodobject.obj" \
+	"$(INTDIR)\modsupport.obj" \
+	"$(INTDIR)\moduleobject.obj" \
+	"$(INTDIR)\msvcrtmodule.obj" \
+	"$(INTDIR)\myreadline.obj" \
+	"$(INTDIR)\mysnprintf.obj" \
+	"$(INTDIR)\mystrtoul.obj" \
+	"$(INTDIR)\node.obj" \
+	"$(INTDIR)\object.obj" \
+	"$(INTDIR)\obmalloc.obj" \
+	"$(INTDIR)\operator.obj" \
+	"$(INTDIR)\parser.obj" \
+	"$(INTDIR)\parsetok.obj" \
+	"$(INTDIR)\pcremodule.obj" \
+	"$(INTDIR)\posixmodule.obj" \
+	"$(INTDIR)\pyfpe.obj" \
+	"$(INTDIR)\pypcre.obj" \
+	"$(INTDIR)\pystate.obj" \
+	"$(INTDIR)\pythonrun.obj" \
+	"$(INTDIR)\rangeobject.obj" \
+	"$(INTDIR)\regexmodule.obj" \
+	"$(INTDIR)\regexpr.obj" \
+	"$(INTDIR)\rgbimgmodule.obj" \
+	"$(INTDIR)\rotormodule.obj" \
+	"$(INTDIR)\shamodule.obj" \
+	"$(INTDIR)\signalmodule.obj" \
+	"$(INTDIR)\sliceobject.obj" \
+	"$(INTDIR)\stringobject.obj" \
+	"$(INTDIR)\stropmodule.obj" \
+	"$(INTDIR)\structmember.obj" \
+	"$(INTDIR)\structmodule.obj" \
+	"$(INTDIR)\structseq.obj" \
+	"$(INTDIR)\symtable.obj" \
+	"$(INTDIR)\sysmodule.obj" \
+	"$(INTDIR)\thread.obj" \
+	"$(INTDIR)\threadmodule.obj" \
+	"$(INTDIR)\timemodule.obj" \
+	"$(INTDIR)\tokenizer.obj" \
+	"$(INTDIR)\traceback.obj" \
+	"$(INTDIR)\tupleobject.obj" \
+	"$(INTDIR)\typeobject.obj" \
+	"$(INTDIR)\unicodectype.obj" \
+	"$(INTDIR)\unicodeobject.obj" \
+	"$(INTDIR)\weakrefobject.obj" \
+	"$(INTDIR)\xreadlinesmodule.obj" \
+	"$(INTDIR)\xxsubtype.obj" \
+	"$(INTDIR)\yuvconvert.obj" \
+	"$(INTDIR)\zipimport.obj" \
+	"$(INTDIR)\python_nt.res"
+
+"$(OUTDIR)\python23.dll" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "pythoncore - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\pythoncore
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\python23_d.dll"
+
+!ELSE
+
+ALL : "make_versioninfo - Win32 Debug" "$(OUTDIR)\python23_d.dll"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"make_versioninfo - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_codecsmodule.obj"
+	-@erase "$(INTDIR)\_hotshot.obj"
+	-@erase "$(INTDIR)\_localemodule.obj"
+	-@erase "$(INTDIR)\_randommodule.obj"
+	-@erase "$(INTDIR)\_weakref.obj"
+	-@erase "$(INTDIR)\abstract.obj"
+	-@erase "$(INTDIR)\acceler.obj"
+	-@erase "$(INTDIR)\arraymodule.obj"
+	-@erase "$(INTDIR)\audioop.obj"
+	-@erase "$(INTDIR)\binascii.obj"
+	-@erase "$(INTDIR)\bitset.obj"
+	-@erase "$(INTDIR)\bltinmodule.obj"
+	-@erase "$(INTDIR)\boolobject.obj"
+	-@erase "$(INTDIR)\bufferobject.obj"
+	-@erase "$(INTDIR)\cellobject.obj"
+	-@erase "$(INTDIR)\ceval.obj"
+	-@erase "$(INTDIR)\classobject.obj"
+	-@erase "$(INTDIR)\cmathmodule.obj"
+	-@erase "$(INTDIR)\cobject.obj"
+	-@erase "$(INTDIR)\codecs.obj"
+	-@erase "$(INTDIR)\compile.obj"
+	-@erase "$(INTDIR)\complexobject.obj"
+	-@erase "$(INTDIR)\config.obj"
+	-@erase "$(INTDIR)\cPickle.obj"
+	-@erase "$(INTDIR)\cStringIO.obj"
+	-@erase "$(INTDIR)\descrobject.obj"
+	-@erase "$(INTDIR)\dictobject.obj"
+	-@erase "$(INTDIR)\dl_nt.obj"
+	-@erase "$(INTDIR)\dynload_win.obj"
+	-@erase "$(INTDIR)\enumobject.obj"
+	-@erase "$(INTDIR)\errnomodule.obj"
+	-@erase "$(INTDIR)\errors.obj"
+	-@erase "$(INTDIR)\exceptions.obj"
+	-@erase "$(INTDIR)\fileobject.obj"
+	-@erase "$(INTDIR)\floatobject.obj"
+	-@erase "$(INTDIR)\frameobject.obj"
+	-@erase "$(INTDIR)\frozen.obj"
+	-@erase "$(INTDIR)\funcobject.obj"
+	-@erase "$(INTDIR)\future.obj"
+	-@erase "$(INTDIR)\gcmodule.obj"
+	-@erase "$(INTDIR)\getargs.obj"
+	-@erase "$(INTDIR)\getbuildinfo.obj"
+	-@erase "$(INTDIR)\getcompiler.obj"
+	-@erase "$(INTDIR)\getcopyright.obj"
+	-@erase "$(INTDIR)\getmtime.obj"
+	-@erase "$(INTDIR)\getopt.obj"
+	-@erase "$(INTDIR)\getpathp.obj"
+	-@erase "$(INTDIR)\getplatform.obj"
+	-@erase "$(INTDIR)\getversion.obj"
+	-@erase "$(INTDIR)\graminit.obj"
+	-@erase "$(INTDIR)\grammar1.obj"
+	-@erase "$(INTDIR)\imageop.obj"
+	-@erase "$(INTDIR)\import.obj"
+	-@erase "$(INTDIR)\import_nt.obj"
+	-@erase "$(INTDIR)\importdl.obj"
+	-@erase "$(INTDIR)\intobject.obj"
+	-@erase "$(INTDIR)\iterobject.obj"
+	-@erase "$(INTDIR)\itertoolsmodule.obj"
+	-@erase "$(INTDIR)\listnode.obj"
+	-@erase "$(INTDIR)\listobject.obj"
+	-@erase "$(INTDIR)\longobject.obj"
+	-@erase "$(INTDIR)\main.obj"
+	-@erase "$(INTDIR)\marshal.obj"
+	-@erase "$(INTDIR)\mathmodule.obj"
+	-@erase "$(INTDIR)\md5c.obj"
+	-@erase "$(INTDIR)\md5module.obj"
+	-@erase "$(INTDIR)\metagrammar.obj"
+	-@erase "$(INTDIR)\methodobject.obj"
+	-@erase "$(INTDIR)\modsupport.obj"
+	-@erase "$(INTDIR)\moduleobject.obj"
+	-@erase "$(INTDIR)\msvcrtmodule.obj"
+	-@erase "$(INTDIR)\myreadline.obj"
+	-@erase "$(INTDIR)\mysnprintf.obj"
+	-@erase "$(INTDIR)\mystrtoul.obj"
+	-@erase "$(INTDIR)\node.obj"
+	-@erase "$(INTDIR)\object.obj"
+	-@erase "$(INTDIR)\obmalloc.obj"
+	-@erase "$(INTDIR)\operator.obj"
+	-@erase "$(INTDIR)\parser.obj"
+	-@erase "$(INTDIR)\parsetok.obj"
+	-@erase "$(INTDIR)\pcremodule.obj"
+	-@erase "$(INTDIR)\posixmodule.obj"
+	-@erase "$(INTDIR)\pyfpe.obj"
+	-@erase "$(INTDIR)\pypcre.obj"
+	-@erase "$(INTDIR)\pystate.obj"
+	-@erase "$(INTDIR)\python_nt.res"
+	-@erase "$(INTDIR)\pythonrun.obj"
+	-@erase "$(INTDIR)\rangeobject.obj"
+	-@erase "$(INTDIR)\regexmodule.obj"
+	-@erase "$(INTDIR)\regexpr.obj"
+	-@erase "$(INTDIR)\rgbimgmodule.obj"
+	-@erase "$(INTDIR)\rotormodule.obj"
+	-@erase "$(INTDIR)\shamodule.obj"
+	-@erase "$(INTDIR)\signalmodule.obj"
+	-@erase "$(INTDIR)\sliceobject.obj"
+	-@erase "$(INTDIR)\stringobject.obj"
+	-@erase "$(INTDIR)\stropmodule.obj"
+	-@erase "$(INTDIR)\structmember.obj"
+	-@erase "$(INTDIR)\structmodule.obj"
+	-@erase "$(INTDIR)\structseq.obj"
+	-@erase "$(INTDIR)\symtable.obj"
+	-@erase "$(INTDIR)\sysmodule.obj"
+	-@erase "$(INTDIR)\thread.obj"
+	-@erase "$(INTDIR)\threadmodule.obj"
+	-@erase "$(INTDIR)\timemodule.obj"
+	-@erase "$(INTDIR)\tokenizer.obj"
+	-@erase "$(INTDIR)\traceback.obj"
+	-@erase "$(INTDIR)\tupleobject.obj"
+	-@erase "$(INTDIR)\typeobject.obj"
+	-@erase "$(INTDIR)\unicodectype.obj"
+	-@erase "$(INTDIR)\unicodeobject.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\weakrefobject.obj"
+	-@erase "$(INTDIR)\xreadlinesmodule.obj"
+	-@erase "$(INTDIR)\xxsubtype.obj"
+	-@erase "$(INTDIR)\yuvconvert.obj"
+	-@erase "$(INTDIR)\zipimport.obj"
+	-@erase "$(OUTDIR)\python23_d.dll"
+	-@erase "$(OUTDIR)\python23_d.exp"
+	-@erase "$(OUTDIR)\python23_d.ilk"
+	-@erase "$(OUTDIR)\python23_d.lib"
+	-@erase "$(OUTDIR)\python23_d.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "_DEBUG" /D "USE_DL_EXPORT" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\pythoncore.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /Zm200 /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o /win32 "NUL"
+RSC=rc.exe
+RSC_PROJ=/l 0x409 /fo"$(INTDIR)\python_nt.res" /i "..\Include" /d "_DEBUG"
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\pythoncore.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS= kernel32.lib user32.lib advapi32.lib shell32.lib /nologo /base:"0x1e000000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\python23_d.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\python23_d.dll" /implib:"$(OUTDIR)\python23_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\_codecsmodule.obj" \
+	"$(INTDIR)\_hotshot.obj" \
+	"$(INTDIR)\_localemodule.obj" \
+	"$(INTDIR)\_randommodule.obj" \
+	"$(INTDIR)\_weakref.obj" \
+	"$(INTDIR)\abstract.obj" \
+	"$(INTDIR)\acceler.obj" \
+	"$(INTDIR)\arraymodule.obj" \
+	"$(INTDIR)\audioop.obj" \
+	"$(INTDIR)\binascii.obj" \
+	"$(INTDIR)\bitset.obj" \
+	"$(INTDIR)\bltinmodule.obj" \
+	"$(INTDIR)\boolobject.obj" \
+	"$(INTDIR)\bufferobject.obj" \
+	"$(INTDIR)\cellobject.obj" \
+	"$(INTDIR)\ceval.obj" \
+	"$(INTDIR)\classobject.obj" \
+	"$(INTDIR)\cmathmodule.obj" \
+	"$(INTDIR)\cobject.obj" \
+	"$(INTDIR)\codecs.obj" \
+	"$(INTDIR)\compile.obj" \
+	"$(INTDIR)\complexobject.obj" \
+	"$(INTDIR)\config.obj" \
+	"$(INTDIR)\cPickle.obj" \
+	"$(INTDIR)\cStringIO.obj" \
+	"$(INTDIR)\descrobject.obj" \
+	"$(INTDIR)\dictobject.obj" \
+	"$(INTDIR)\dl_nt.obj" \
+	"$(INTDIR)\dynload_win.obj" \
+	"$(INTDIR)\enumobject.obj" \
+	"$(INTDIR)\errnomodule.obj" \
+	"$(INTDIR)\errors.obj" \
+	"$(INTDIR)\exceptions.obj" \
+	"$(INTDIR)\fileobject.obj" \
+	"$(INTDIR)\floatobject.obj" \
+	"$(INTDIR)\frameobject.obj" \
+	"$(INTDIR)\frozen.obj" \
+	"$(INTDIR)\funcobject.obj" \
+	"$(INTDIR)\future.obj" \
+	"$(INTDIR)\gcmodule.obj" \
+	"$(INTDIR)\getargs.obj" \
+	"$(INTDIR)\getbuildinfo.obj" \
+	"$(INTDIR)\getcompiler.obj" \
+	"$(INTDIR)\getcopyright.obj" \
+	"$(INTDIR)\getmtime.obj" \
+	"$(INTDIR)\getopt.obj" \
+	"$(INTDIR)\getpathp.obj" \
+	"$(INTDIR)\getplatform.obj" \
+	"$(INTDIR)\getversion.obj" \
+	"$(INTDIR)\graminit.obj" \
+	"$(INTDIR)\grammar1.obj" \
+	"$(INTDIR)\imageop.obj" \
+	"$(INTDIR)\import.obj" \
+	"$(INTDIR)\import_nt.obj" \
+	"$(INTDIR)\importdl.obj" \
+	"$(INTDIR)\intobject.obj" \
+	"$(INTDIR)\iterobject.obj" \
+	"$(INTDIR)\itertoolsmodule.obj" \
+	"$(INTDIR)\listnode.obj" \
+	"$(INTDIR)\listobject.obj" \
+	"$(INTDIR)\longobject.obj" \
+	"$(INTDIR)\main.obj" \
+	"$(INTDIR)\marshal.obj" \
+	"$(INTDIR)\mathmodule.obj" \
+	"$(INTDIR)\md5c.obj" \
+	"$(INTDIR)\md5module.obj" \
+	"$(INTDIR)\metagrammar.obj" \
+	"$(INTDIR)\methodobject.obj" \
+	"$(INTDIR)\modsupport.obj" \
+	"$(INTDIR)\moduleobject.obj" \
+	"$(INTDIR)\msvcrtmodule.obj" \
+	"$(INTDIR)\myreadline.obj" \
+	"$(INTDIR)\mysnprintf.obj" \
+	"$(INTDIR)\mystrtoul.obj" \
+	"$(INTDIR)\node.obj" \
+	"$(INTDIR)\object.obj" \
+	"$(INTDIR)\obmalloc.obj" \
+	"$(INTDIR)\operator.obj" \
+	"$(INTDIR)\parser.obj" \
+	"$(INTDIR)\parsetok.obj" \
+	"$(INTDIR)\pcremodule.obj" \
+	"$(INTDIR)\posixmodule.obj" \
+	"$(INTDIR)\pyfpe.obj" \
+	"$(INTDIR)\pypcre.obj" \
+	"$(INTDIR)\pystate.obj" \
+	"$(INTDIR)\pythonrun.obj" \
+	"$(INTDIR)\rangeobject.obj" \
+	"$(INTDIR)\regexmodule.obj" \
+	"$(INTDIR)\regexpr.obj" \
+	"$(INTDIR)\rgbimgmodule.obj" \
+	"$(INTDIR)\rotormodule.obj" \
+	"$(INTDIR)\shamodule.obj" \
+	"$(INTDIR)\signalmodule.obj" \
+	"$(INTDIR)\sliceobject.obj" \
+	"$(INTDIR)\stringobject.obj" \
+	"$(INTDIR)\stropmodule.obj" \
+	"$(INTDIR)\structmember.obj" \
+	"$(INTDIR)\structmodule.obj" \
+	"$(INTDIR)\structseq.obj" \
+	"$(INTDIR)\symtable.obj" \
+	"$(INTDIR)\sysmodule.obj" \
+	"$(INTDIR)\thread.obj" \
+	"$(INTDIR)\threadmodule.obj" \
+	"$(INTDIR)\timemodule.obj" \
+	"$(INTDIR)\tokenizer.obj" \
+	"$(INTDIR)\traceback.obj" \
+	"$(INTDIR)\tupleobject.obj" \
+	"$(INTDIR)\typeobject.obj" \
+	"$(INTDIR)\unicodectype.obj" \
+	"$(INTDIR)\unicodeobject.obj" \
+	"$(INTDIR)\weakrefobject.obj" \
+	"$(INTDIR)\xreadlinesmodule.obj" \
+	"$(INTDIR)\xxsubtype.obj" \
+	"$(INTDIR)\yuvconvert.obj" \
+	"$(INTDIR)\zipimport.obj" \
+	"$(INTDIR)\python_nt.res"
+
+"$(OUTDIR)\python23_d.dll" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("pythoncore.dep")
+!INCLUDE "pythoncore.dep"
+!ELSE
+!MESSAGE Warning: cannot find "pythoncore.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "pythoncore - Win32 Release" || "$(CFG)" == "pythoncore - Win32 Debug"
+
+!IF  "$(CFG)" == "pythoncore - Win32 Release"
+
+"make_versioninfo - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\make_versioninfo.mak" CFG="make_versioninfo - Win32 Release"
+   cd "."
+
+"make_versioninfo - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\make_versioninfo.mak" CFG="make_versioninfo - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "pythoncore - Win32 Debug"
+
+"make_versioninfo - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\make_versioninfo.mak" CFG="make_versioninfo - Win32 Debug"
+   cd "."
+
+"make_versioninfo - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\make_versioninfo.mak" CFG="make_versioninfo - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\_codecsmodule.c
+
+"$(INTDIR)\_codecsmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\_hotshot.c
+
+"$(INTDIR)\_hotshot.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\_localemodule.c
+
+"$(INTDIR)\_localemodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\_randommodule.c
+
+"$(INTDIR)\_randommodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\_weakref.c
+
+"$(INTDIR)\_weakref.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\abstract.c
+
+"$(INTDIR)\abstract.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\acceler.c
+
+"$(INTDIR)\acceler.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\arraymodule.c
+
+"$(INTDIR)\arraymodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\audioop.c
+
+"$(INTDIR)\audioop.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\binascii.c
+
+"$(INTDIR)\binascii.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\bitset.c
+
+"$(INTDIR)\bitset.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\bltinmodule.c
+
+"$(INTDIR)\bltinmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\boolobject.c
+
+"$(INTDIR)\boolobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\bufferobject.c
+
+"$(INTDIR)\bufferobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\cellobject.c
+
+"$(INTDIR)\cellobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\ceval.c
+
+"$(INTDIR)\ceval.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\classobject.c
+
+"$(INTDIR)\classobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\cmathmodule.c
+
+"$(INTDIR)\cmathmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\cobject.c
+
+"$(INTDIR)\cobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\codecs.c
+
+"$(INTDIR)\codecs.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\compile.c
+
+"$(INTDIR)\compile.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\complexobject.c
+
+"$(INTDIR)\complexobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\PC\config.c
+
+"$(INTDIR)\config.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\cPickle.c
+
+"$(INTDIR)\cPickle.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\cStringIO.c
+
+"$(INTDIR)\cStringIO.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\descrobject.c
+
+"$(INTDIR)\descrobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\dictobject.c
+
+"$(INTDIR)\dictobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\PC\dl_nt.c
+
+"$(INTDIR)\dl_nt.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\dynload_win.c
+
+"$(INTDIR)\dynload_win.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\enumobject.c
+
+"$(INTDIR)\enumobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\errnomodule.c
+
+"$(INTDIR)\errnomodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\errors.c
+
+"$(INTDIR)\errors.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\exceptions.c
+
+"$(INTDIR)\exceptions.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\fileobject.c
+
+"$(INTDIR)\fileobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\floatobject.c
+
+"$(INTDIR)\floatobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\frameobject.c
+
+"$(INTDIR)\frameobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\frozen.c
+
+"$(INTDIR)\frozen.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\funcobject.c
+
+"$(INTDIR)\funcobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\future.c
+
+"$(INTDIR)\future.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\gcmodule.c
+
+"$(INTDIR)\gcmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\getargs.c
+
+"$(INTDIR)\getargs.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\getbuildinfo.c
+
+!IF  "$(CFG)" == "pythoncore - Win32 Release"
+
+CPP_SWITCHES=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "USE_DL_EXPORT" /D BUILD=53 /Fp"$(INTDIR)\pythoncore.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /Zm200 /c
+
+"$(INTDIR)\getbuildinfo.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) @<<
+  $(CPP_SWITCHES) $(SOURCE)
+<<
+
+
+!ELSEIF  "$(CFG)" == "pythoncore - Win32 Debug"
+
+CPP_SWITCHES=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "_DEBUG" /D "USE_DL_EXPORT" /D "WIN32" /D "_WINDOWS" /D BUILD=53 /Fp"$(INTDIR)\pythoncore.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /Zm200 /c
+
+"$(INTDIR)\getbuildinfo.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) @<<
+  $(CPP_SWITCHES) $(SOURCE)
+<<
+
+
+!ENDIF
+
+SOURCE=..\Python\getcompiler.c
+
+"$(INTDIR)\getcompiler.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\getcopyright.c
+
+"$(INTDIR)\getcopyright.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\getmtime.c
+
+"$(INTDIR)\getmtime.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\getopt.c
+
+"$(INTDIR)\getopt.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\PC\getpathp.c
+
+"$(INTDIR)\getpathp.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\getplatform.c
+
+"$(INTDIR)\getplatform.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\getversion.c
+
+"$(INTDIR)\getversion.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\graminit.c
+
+"$(INTDIR)\graminit.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\grammar1.c
+
+"$(INTDIR)\grammar1.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\imageop.c
+
+"$(INTDIR)\imageop.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\import.c
+
+"$(INTDIR)\import.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\PC\import_nt.c
+
+!IF  "$(CFG)" == "pythoncore - Win32 Release"
+
+CPP_SWITCHES=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "..\Python" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "USE_DL_EXPORT" /Fp"$(INTDIR)\pythoncore.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /Zm200 /c
+
+"$(INTDIR)\import_nt.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) @<<
+  $(CPP_SWITCHES) $(SOURCE)
+<<
+
+
+!ELSEIF  "$(CFG)" == "pythoncore - Win32 Debug"
+
+CPP_SWITCHES=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "..\Python" /D "_DEBUG" /D "USE_DL_EXPORT" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\pythoncore.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /Zm200 /c
+
+"$(INTDIR)\import_nt.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) @<<
+  $(CPP_SWITCHES) $(SOURCE)
+<<
+
+
+!ENDIF
+
+SOURCE=..\Python\importdl.c
+
+"$(INTDIR)\importdl.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\intobject.c
+
+"$(INTDIR)\intobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\iterobject.c
+
+"$(INTDIR)\iterobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\itertoolsmodule.c
+
+"$(INTDIR)\itertoolsmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\listnode.c
+
+"$(INTDIR)\listnode.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\listobject.c
+
+"$(INTDIR)\listobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\longobject.c
+
+"$(INTDIR)\longobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\main.c
+
+"$(INTDIR)\main.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\marshal.c
+
+"$(INTDIR)\marshal.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\mathmodule.c
+
+"$(INTDIR)\mathmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\md5c.c
+
+"$(INTDIR)\md5c.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\md5module.c
+
+"$(INTDIR)\md5module.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\metagrammar.c
+
+"$(INTDIR)\metagrammar.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\methodobject.c
+
+"$(INTDIR)\methodobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\modsupport.c
+
+"$(INTDIR)\modsupport.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\moduleobject.c
+
+"$(INTDIR)\moduleobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\PC\msvcrtmodule.c
+
+"$(INTDIR)\msvcrtmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\myreadline.c
+
+"$(INTDIR)\myreadline.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\mysnprintf.c
+
+"$(INTDIR)\mysnprintf.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\mystrtoul.c
+
+"$(INTDIR)\mystrtoul.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\node.c
+
+"$(INTDIR)\node.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\object.c
+
+"$(INTDIR)\object.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\obmalloc.c
+
+"$(INTDIR)\obmalloc.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\operator.c
+
+"$(INTDIR)\operator.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\parser.c
+
+"$(INTDIR)\parser.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\parsetok.c
+
+"$(INTDIR)\parsetok.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\pcremodule.c
+
+"$(INTDIR)\pcremodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\posixmodule.c
+
+"$(INTDIR)\posixmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\pyfpe.c
+
+"$(INTDIR)\pyfpe.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\pypcre.c
+
+"$(INTDIR)\pypcre.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\pystate.c
+
+"$(INTDIR)\pystate.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\PC\python_nt.rc
+
+!IF  "$(CFG)" == "pythoncore - Win32 Release"
+
+
+"$(INTDIR)\python_nt.res" : $(SOURCE) "$(INTDIR)"
+	$(RSC) /l 0x409 /fo"$(INTDIR)\python_nt.res" /i "..\Include" /i "\tmp\Python-2.3.4\PC" /d "NDEBUG" $(SOURCE)
+
+
+!ELSEIF  "$(CFG)" == "pythoncore - Win32 Debug"
+
+
+"$(INTDIR)\python_nt.res" : $(SOURCE) "$(INTDIR)"
+	$(RSC) /l 0x409 /fo"$(INTDIR)\python_nt.res" /i "..\Include" /i "\tmp\Python-2.3.4\PC" /d "_DEBUG" $(SOURCE)
+
+
+!ENDIF
+
+SOURCE=..\Python\pythonrun.c
+
+"$(INTDIR)\pythonrun.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\rangeobject.c
+
+"$(INTDIR)\rangeobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\regexmodule.c
+
+"$(INTDIR)\regexmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\regexpr.c
+
+"$(INTDIR)\regexpr.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\rgbimgmodule.c
+
+"$(INTDIR)\rgbimgmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\rotormodule.c
+
+"$(INTDIR)\rotormodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\shamodule.c
+
+"$(INTDIR)\shamodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\signalmodule.c
+
+"$(INTDIR)\signalmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\sliceobject.c
+
+"$(INTDIR)\sliceobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\stringobject.c
+
+"$(INTDIR)\stringobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\stropmodule.c
+
+"$(INTDIR)\stropmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\structmember.c
+
+"$(INTDIR)\structmember.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\structmodule.c
+
+"$(INTDIR)\structmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\structseq.c
+
+"$(INTDIR)\structseq.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\symtable.c
+
+"$(INTDIR)\symtable.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\sysmodule.c
+
+"$(INTDIR)\sysmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\thread.c
+
+"$(INTDIR)\thread.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\threadmodule.c
+
+"$(INTDIR)\threadmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\timemodule.c
+
+"$(INTDIR)\timemodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Parser\tokenizer.c
+
+"$(INTDIR)\tokenizer.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Python\traceback.c
+
+"$(INTDIR)\traceback.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\tupleobject.c
+
+"$(INTDIR)\tupleobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\typeobject.c
+
+"$(INTDIR)\typeobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\unicodectype.c
+
+"$(INTDIR)\unicodectype.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\unicodeobject.c
+
+"$(INTDIR)\unicodeobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Objects\weakrefobject.c
+
+"$(INTDIR)\weakrefobject.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\xreadlinesmodule.c
+
+"$(INTDIR)\xreadlinesmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\xxsubtype.c
+
+"$(INTDIR)\xxsubtype.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\yuvconvert.c
+
+"$(INTDIR)\yuvconvert.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+SOURCE=..\Modules\zipimport.c
+
+"$(INTDIR)\zipimport.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/pythonw.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/pythonw.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,52 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von pythonw.mak
+
+..\PC\python_exe.rc : \
+	"..\PC\pycon.ico"\
+	
+
+..\PC\WinMain.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/pythonw.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/pythonw.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,255 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=pythonw - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "pythonw - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\pythonw
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\pythonw.exe"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\pythonw.exe"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\python_exe.res"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\WinMain.obj"
+	-@erase "$(OUTDIR)\pythonw.exe"
+	-@erase "$(OUTDIR)\pythonw.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\pythonw.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+RSC_PROJ=/l 0x409 /fo"$(INTDIR)\python_exe.res" /d "NDEBUG"
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\pythonw.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1d000000" /subsystem:windows /incremental:no /pdb:"$(OUTDIR)\pythonw.pdb" /debug /machine:I386 /out:"$(OUTDIR)\pythonw.exe"
+LINK32_OBJS= \
+	"$(INTDIR)\WinMain.obj" \
+	"$(INTDIR)\python_exe.res" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\pythonw.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "pythonw - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\pythonw
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\pythonw_d.exe"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\pythonw_d.exe"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\python_exe.res"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\WinMain.obj"
+	-@erase "$(OUTDIR)\pythonw_d.exe"
+	-@erase "$(OUTDIR)\pythonw_d.ilk"
+	-@erase "$(OUTDIR)\pythonw_d.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /Fp"$(INTDIR)\pythonw.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+RSC_PROJ=/l 0x409 /fo"$(INTDIR)\python_exe.res" /d "_DEBUG"
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\pythonw.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1d000000" /subsystem:windows /incremental:yes /pdb:"$(OUTDIR)\pythonw_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\pythonw_d.exe" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\WinMain.obj" \
+	"$(INTDIR)\python_exe.res" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\pythonw_d.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("pythonw.dep")
+!INCLUDE "pythonw.dep"
+!ELSE
+!MESSAGE Warning: cannot find "pythonw.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "pythonw - Win32 Release" || "$(CFG)" == "pythonw - Win32 Debug"
+
+!IF  "$(CFG)" == "pythonw - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "pythonw - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\PC\python_exe.rc
+
+!IF  "$(CFG)" == "pythonw - Win32 Release"
+
+
+"$(INTDIR)\python_exe.res" : $(SOURCE) "$(INTDIR)"
+	$(RSC) /l 0x409 /fo"$(INTDIR)\python_exe.res" /i "\tmp\Python-2.3.4\PC" /d "NDEBUG" $(SOURCE)
+
+
+!ELSEIF  "$(CFG)" == "pythonw - Win32 Debug"
+
+
+"$(INTDIR)\python_exe.res" : $(SOURCE) "$(INTDIR)"
+	$(RSC) /l 0x409 /fo"$(INTDIR)\python_exe.res" /i "\tmp\Python-2.3.4\PC" /d "_DEBUG" $(SOURCE)
+
+
+!ENDIF
+
+SOURCE=..\PC\WinMain.c
+
+"$(INTDIR)\WinMain.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/select.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/select.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,48 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von select.mak
+
+..\Modules\selectmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/select.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/select.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,238 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=select - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "select - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\select
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\select.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\select.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\selectmodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\select.exp"
+	-@erase "$(OUTDIR)\select.lib"
+	-@erase "$(OUTDIR)\select.pdb"
+	-@erase "$(OUTDIR)\select.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "..\..\select113" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\select.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\select.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib wsock32.lib /nologo /base:"0x1D110000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\select.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\select.pyd" /implib:"$(OUTDIR)\select.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\selectmodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\select.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "select - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\select
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\select_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\select_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\selectmodule.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\select_d.exp"
+	-@erase "$(OUTDIR)\select_d.ilk"
+	-@erase "$(OUTDIR)\select_d.lib"
+	-@erase "$(OUTDIR)\select_d.pdb"
+	-@erase "$(OUTDIR)\select_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "..\..\select113" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\select.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\select.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib wsock32.lib /nologo /base:"0x1D110000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\select_d.pdb" /debug /machine:I386 /nodefaultlib:"libc" /nodefaultlib:"msvcrt" /out:"$(OUTDIR)\select_d.pyd" /implib:"$(OUTDIR)\select_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\selectmodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\select_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("select.dep")
+!INCLUDE "select.dep"
+!ELSE
+!MESSAGE Warning: cannot find "select.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "select - Win32 Release" || "$(CFG)" == "select - Win32 Debug"
+
+!IF  "$(CFG)" == "select - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "select - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\selectmodule.c
+
+"$(INTDIR)\selectmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
+
--- misc/Python-2.3.4/PCbuild/unicodedata.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/unicodedata.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,51 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von unicodedata.mak
+
+..\Modules\unicodedata.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\ucnhash.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\Modules\unicodedata_db.h"\
+	"..\Modules\unicodename_db.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/unicodedata.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/unicodedata.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,235 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=unicodedata - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "unicodedata - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\unicodedata
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\unicodedata.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\unicodedata.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\unicodedata.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(OUTDIR)\unicodedata.exp"
+	-@erase "$(OUTDIR)\unicodedata.lib"
+	-@erase "$(OUTDIR)\unicodedata.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\unicodedata.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\unicodedata.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1D120000" /dll /incremental:no /pdb:"$(OUTDIR)\unicodedata.pdb" /machine:I386 /out:"$(OUTDIR)\unicodedata.pyd" /implib:"$(OUTDIR)\unicodedata.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\unicodedata.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\unicodedata.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "unicodedata - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\unicodedata
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\unicodedata_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\unicodedata_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\unicodedata.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\unicodedata_d.exp"
+	-@erase "$(OUTDIR)\unicodedata_d.ilk"
+	-@erase "$(OUTDIR)\unicodedata_d.lib"
+	-@erase "$(OUTDIR)\unicodedata_d.pdb"
+	-@erase "$(OUTDIR)\unicodedata_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "MMAP_EXPORTS" /Fp"$(INTDIR)\unicodedata.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\unicodedata.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1D120000" /dll /incremental:yes /pdb:"$(OUTDIR)\unicodedata_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\unicodedata_d.pyd" /implib:"$(OUTDIR)\unicodedata_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\unicodedata.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\unicodedata_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("unicodedata.dep")
+!INCLUDE "unicodedata.dep"
+!ELSE
+!MESSAGE Warning: cannot find "unicodedata.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "unicodedata - Win32 Release" || "$(CFG)" == "unicodedata - Win32 Debug"
+
+!IF  "$(CFG)" == "unicodedata - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "unicodedata - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\unicodedata.c
+
+"$(INTDIR)\unicodedata.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/w9xpopen.dep	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/w9xpopen.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,2 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von w9xpopen.mak
+
--- misc/Python-2.3.4/PCbuild/w9xpopen.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/w9xpopen.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,178 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=w9xpopen - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "w9xpopen - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\w9xpopen
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+ALL : "$(OUTDIR)\w9xpopen.exe"
+
+
+CLEAN :
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\w9xpopen.obj"
+	-@erase "$(OUTDIR)\w9xpopen.exe"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /Fp"$(INTDIR)\w9xpopen.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\w9xpopen.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib /nologo /incremental:no /pdb:"$(OUTDIR)\w9xpopen.pdb" /machine:I386 /out:"$(OUTDIR)\w9xpopen.exe"
+LINK32_OBJS= \
+	"$(INTDIR)\w9xpopen.obj"
+
+"$(OUTDIR)\w9xpopen.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "w9xpopen - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\w9xpopen
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+ALL : "$(OUTDIR)\w9xpopen_d.exe"
+
+
+CLEAN :
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\w9xpopen.obj"
+	-@erase "$(OUTDIR)\w9xpopen_d.exe"
+	-@erase "$(OUTDIR)\w9xpopen_d.ilk"
+	-@erase "$(OUTDIR)\w9xpopen_d.pdb"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /Fp"$(INTDIR)\w9xpopen.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\w9xpopen.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib /nologo /incremental:yes /pdb:"$(OUTDIR)\w9xpopen_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\w9xpopen_d.exe" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\w9xpopen.obj"
+
+"$(OUTDIR)\w9xpopen_d.exe" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;1
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("w9xpopen.dep")
+!INCLUDE "w9xpopen.dep"
+!ELSE
+!MESSAGE Warning: cannot find "w9xpopen.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "w9xpopen - Win32 Release" || "$(CFG)" == "w9xpopen - Win32 Debug"
+SOURCE=..\PC\w9xpopen.c
+
+"$(INTDIR)\w9xpopen.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/winreg.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/winreg.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,49 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von winreg.mak
+
+..\PC\_winreg.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\structmember.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/winreg.mak	2009-03-24 11:08:00.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/winreg.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,253 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=winreg - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "winreg - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\winreg
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_winreg.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\_winreg.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_winreg.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(OUTDIR)\_winreg.exp"
+	-@erase "$(OUTDIR)\_winreg.lib"
+	-@erase "$(OUTDIR)\_winreg.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /Fp"$(INTDIR)\winreg.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\winreg.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1C0000" /dll /incremental:no /pdb:"$(OUTDIR)\_winreg.pdb" /machine:I386 /out:"$(OUTDIR)\_winreg.pyd" /implib:"$(OUTDIR)\_winreg.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\_winreg.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\_winreg.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "winreg - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\winreg
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\_winreg_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\_winreg_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\_winreg.obj"
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(OUTDIR)\_winreg_d.exp"
+	-@erase "$(OUTDIR)\_winreg_d.ilk"
+	-@erase "$(OUTDIR)\_winreg_d.lib"
+	-@erase "$(OUTDIR)\_winreg_d.pdb"
+	-@erase "$(OUTDIR)\_winreg_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /Fp"$(INTDIR)\winreg.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\winreg.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /base:"0x1e1C0000" /dll /incremental:yes /pdb:"$(OUTDIR)\_winreg_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\_winreg_d.pyd" /implib:"$(OUTDIR)\_winreg_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\_winreg.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\_winreg_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("winreg.dep")
+!INCLUDE "winreg.dep"
+!ELSE
+!MESSAGE Warning: cannot find "winreg.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "winreg - Win32 Release" || "$(CFG)" == "winreg - Win32 Debug"
+
+!IF  "$(CFG)" == "winreg - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "winreg - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\PC\_winreg.c
+
+!IF  "$(CFG)" == "winreg - Win32 Release"
+
+CPP_SWITCHES=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /Fp"$(INTDIR)\winreg.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+"$(INTDIR)\_winreg.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) @<<
+  $(CPP_SWITCHES) $(SOURCE)
+<<
+
+
+!ELSEIF  "$(CFG)" == "winreg - Win32 Debug"
+
+CPP_SWITCHES=/nologo /MDd /W3 $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /Fp"$(INTDIR)\winreg.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+"$(INTDIR)\_winreg.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) @<<
+  $(CPP_SWITCHES) $(SOURCE)
+<<
+
+
+!ENDIF
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/winsound.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/winsound.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,48 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von winsound.mak
+
+..\PC\winsound.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/winsound.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/winsound.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,235 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=winsound - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "winsound - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\winsound
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\winsound.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\winsound.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\winsound.obj"
+	-@erase "$(OUTDIR)\winsound.exp"
+	-@erase "$(OUTDIR)\winsound.lib"
+	-@erase "$(OUTDIR)\winsound.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /O2 /I "..\Include" /I "..\PC" /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "WINSOUND_EXPORTS" /Fp"$(INTDIR)\winsound.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\winsound.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=kernel32.lib winmm.lib user32.lib /nologo /base:"0x1D160000" /dll /incremental:no /pdb:"$(OUTDIR)\winsound.pdb" /machine:I386 /out:"$(OUTDIR)\winsound.pyd" /implib:"$(OUTDIR)\winsound.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\winsound.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\winsound.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ELSEIF  "$(CFG)" == "winsound - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\winsound
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\winsound_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\winsound_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\winsound.obj"
+	-@erase "$(OUTDIR)\winsound_d.exp"
+	-@erase "$(OUTDIR)\winsound_d.ilk"
+	-@erase "$(OUTDIR)\winsound_d.lib"
+	-@erase "$(OUTDIR)\winsound_d.pdb"
+	-@erase "$(OUTDIR)\winsound_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /D "_USRDLL" /D "WINSOUND_EXPORTS" /Fp"$(INTDIR)\winsound.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /GZ /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\winsound.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=user32.lib kernel32.lib winmm.lib /nologo /base:"0x1D160000" /dll /incremental:yes /pdb:"$(OUTDIR)\winsound_d.pdb" /debug /machine:I386 /out:"$(OUTDIR)\winsound_d.pyd" /implib:"$(OUTDIR)\winsound_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\winsound.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\winsound_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+    $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("winsound.dep")
+!INCLUDE "winsound.dep"
+!ELSE
+!MESSAGE Warning: cannot find "winsound.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "winsound - Win32 Release" || "$(CFG)" == "winsound - Win32 Debug"
+
+!IF  "$(CFG)" == "winsound - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "winsound - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\PC\winsound.c
+
+"$(INTDIR)\winsound.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/PCbuild/zlib.dep	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/zlib.dep	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,49 @@
-dummy
+# Microsoft Developer Studio erstellte Abhngigkeitsdatei, einbezogen von zlib.mak
+
+..\Modules\zlibmodule.c : \
+	"..\Include\abstract.h"\
+	"..\Include\boolobject.h"\
+	"..\Include\bufferobject.h"\
+	"..\Include\cellobject.h"\
+	"..\Include\ceval.h"\
+	"..\Include\classobject.h"\
+	"..\Include\cobject.h"\
+	"..\Include\complexobject.h"\
+	"..\Include\descrobject.h"\
+	"..\Include\dictobject.h"\
+	"..\Include\enumobject.h"\
+	"..\Include\fileobject.h"\
+	"..\Include\floatobject.h"\
+	"..\Include\funcobject.h"\
+	"..\Include\import.h"\
+	"..\Include\intobject.h"\
+	"..\Include\intrcheck.h"\
+	"..\Include\iterobject.h"\
+	"..\Include\listobject.h"\
+	"..\Include\longobject.h"\
+	"..\Include\methodobject.h"\
+	"..\Include\modsupport.h"\
+	"..\Include\moduleobject.h"\
+	"..\Include\object.h"\
+	"..\Include\objimpl.h"\
+	"..\Include\patchlevel.h"\
+	"..\Include\pydebug.h"\
+	"..\Include\pyerrors.h"\
+	"..\Include\pyfpe.h"\
+	"..\Include\pymem.h"\
+	"..\Include\pyport.h"\
+	"..\Include\pystate.h"\
+	"..\Include\Python.h"\
+	"..\Include\pythonrun.h"\
+	"..\Include\pythread.h"\
+	"..\Include\rangeobject.h"\
+	"..\Include\sliceobject.h"\
+	"..\Include\stringobject.h"\
+	"..\Include\sysmodule.h"\
+	"..\Include\traceback.h"\
+	"..\Include\tupleobject.h"\
+	"..\Include\unicodeobject.h"\
+	"..\Include\weakrefobject.h"\
+	"..\PC\pyconfig.h"\
+	{$(INCLUDE)}"basetsd.h"\
+	
--- misc/Python-2.3.4/PCbuild/zlib.mak	2009-03-24 11:08:01.000000000 +0100
+++ misc/build/Python-2.3.4/PCbuild/zlib.mak	2009-03-14 18:16:34.000000000 +0100
@@ -1 +1,245 @@
-dummy
+!IF "$(CFG)" == ""
+CFG=zlib - Win32 Release
+!ENDIF
+
+NULL=
+
+!IF  "$(CFG)" == "zlib - Win32 Release"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-release\zlib
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\zlib.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Release" "$(OUTDIR)\zlib.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 ReleaseCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\zlibmodule.obj"
+	-@erase "$(OUTDIR)\zlib.exp"
+	-@erase "$(OUTDIR)\zlib.lib"
+	-@erase "$(OUTDIR)\zlib.pdb"
+	-@erase "$(OUTDIR)\zlib.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MD /W3 $(EXFLAGS) /Zi /O2 /I "..\Include" /I "..\PC" /I "..\..\zlib-1.1.4" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\zlib.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "NDEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\zlib.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=..\..\zlib-1.1.4\zlib.lib /nologo /base:"0x1e1B0000" /subsystem:windows /dll /incremental:no /pdb:"$(OUTDIR)\zlib.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\zlib.pyd" /implib:"$(OUTDIR)\zlib.lib"
+LINK32_OBJS= \
+	"$(INTDIR)\zlibmodule.obj" \
+	"$(OUTDIR)\python23.lib"
+
+"$(OUTDIR)\zlib.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+   cd ..\..\zlib-1.1.4
+	nmake -nologo -f msdos\makefile.w32 zlib.lib
+	 $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+SOURCE="$(InputPath)"
+
+!ELSEIF  "$(CFG)" == "zlib - Win32 Debug"
+
+OUTDIR=.\.
+INTDIR=.\x86-temp-debug\zlib
+# Begin Custom Macros
+OutDir=.\.
+# End Custom Macros
+
+!IF "$(RECURSE)" == "0"
+
+ALL : "$(OUTDIR)\zlib_d.pyd"
+
+!ELSE
+
+ALL : "pythoncore - Win32 Debug" "$(OUTDIR)\zlib_d.pyd"
+
+!ENDIF
+
+!IF "$(RECURSE)" == "1"
+CLEAN :"pythoncore - Win32 DebugCLEAN"
+!ELSE
+CLEAN :
+!ENDIF
+	-@erase "$(INTDIR)\vc60.idb"
+	-@erase "$(INTDIR)\vc60.pdb"
+	-@erase "$(INTDIR)\zlibmodule.obj"
+	-@erase "$(OUTDIR)\zlib_d.exp"
+	-@erase "$(OUTDIR)\zlib_d.ilk"
+	-@erase "$(OUTDIR)\zlib_d.lib"
+	-@erase "$(OUTDIR)\zlib_d.pdb"
+	-@erase "$(OUTDIR)\zlib_d.pyd"
+
+"$(OUTDIR)" :
+    if not exist "$(OUTDIR)/$(NULL)" mkdir "$(OUTDIR)"
+
+"$(INTDIR)" :
+    if not exist "$(INTDIR)/$(NULL)" mkdir "$(INTDIR)"
+
+F90=df.exe
+CPP=cl.exe
+CPP_PROJ=/nologo /MDd /W3 /Gm $(EXFLAGS) /Zi /Od /I "..\Include" /I "..\PC" /I "..\..\zlib-1.1.4" /D "_DEBUG" /D "WIN32" /D "_WINDOWS" /Fp"$(INTDIR)\zlib.pch" /Fo"$(INTDIR)\\" /Fd"$(INTDIR)\\" /FD /c
+
+.c{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.obj::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.c{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cpp{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+.cxx{$(INTDIR)}.sbr::
+   $(CPP) @<<
+   $(CPP_PROJ) $<
+<<
+
+MTL=midl.exe
+MTL_PROJ=/nologo /D "_DEBUG" /mktyplib203 /o "NUL" /win32
+RSC=rc.exe
+BSC32=bscmake.exe
+BSC32_FLAGS=/nologo /o"$(OUTDIR)\zlib.bsc"
+BSC32_SBRS= \
+
+LINK32=link.exe
+LINK32_FLAGS=..\..\zlib-1.1.4\zlib.lib /nologo /base:"0x1e1B0000" /subsystem:windows /dll /incremental:yes /pdb:"$(OUTDIR)\zlib_d.pdb" /debug /machine:I386 /nodefaultlib:"libc" /out:"$(OUTDIR)\zlib_d.pyd" /implib:"$(OUTDIR)\zlib_d.lib" /pdbtype:sept
+LINK32_OBJS= \
+	"$(INTDIR)\zlibmodule.obj" \
+	"$(OUTDIR)\python23_d.lib"
+
+"$(OUTDIR)\zlib_d.pyd" : "$(OUTDIR)" $(DEF_FILE) $(LINK32_OBJS)
+   cd ..\..\zlib-1.1.4
+	nmake -nologo -f msdos\makefile.w32 zlib.lib
+	 $(LINK32) @<<
+  $(LINK32_FLAGS) $(LINK32_OBJS)
+<<
+	if exist $@.manifest mt.exe -manifest $@.manifest -outputresource:$@;2
+	echo $(CPP_PROJ)
+
+SOURCE="$(InputPath)"
+
+!ENDIF
+
+
+!IF "$(NO_EXTERNAL_DEPS)" != "1"
+!IF EXISTS("zlib.dep")
+!INCLUDE "zlib.dep"
+!ELSE
+!MESSAGE Warning: cannot find "zlib.dep"
+!ENDIF
+!ENDIF
+
+
+!IF "$(CFG)" == "zlib - Win32 Release" || "$(CFG)" == "zlib - Win32 Debug"
+
+!IF  "$(CFG)" == "zlib - Win32 Release"
+
+"pythoncore - Win32 Release" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release"
+   cd "."
+
+"pythoncore - Win32 ReleaseCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Release" RECURSE=1 CLEAN
+   cd "."
+
+!ELSEIF  "$(CFG)" == "zlib - Win32 Debug"
+
+"pythoncore - Win32 Debug" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug"
+   cd "."
+
+"pythoncore - Win32 DebugCLEAN" :
+   cd "."
+   $(MAKE) /$(MAKEFLAGS) /F ".\pythoncore.mak" CFG="pythoncore - Win32 Debug" RECURSE=1 CLEAN
+   cd "."
+
+!ENDIF
+
+SOURCE=..\Modules\zlibmodule.c
+
+"$(INTDIR)\zlibmodule.obj" : $(SOURCE) "$(INTDIR)"
+	$(CPP) $(CPP_PROJ) $(SOURCE)
+
+
+
+!ENDIF
--- misc/Python-2.3.4/Python/dynload_win.c	Mon Aug 26 23:20:30 2002
+++ misc/build/Python-2.3.4/Python/dynload_win.c	Mon Apr 14 11:55:57 2008
@@ -23,7 +23,7 @@
 /* Case insensitive string compare, to avoid any dependencies on particular
    C RTL implementations */
 
-static int strcasecmp (char *string1, char *string2)
+static int strcasecmp (const char *string1, const char *string2)
 { 
 	int first, second;
 
--- misc/Python-2.3.4/Python/pythonrun.c	Mon Mar 22 21:41:47 2004
+++ misc/build/Python-2.3.4/Python/pythonrun.c	Mon Apr 14 11:55:57 2008
@@ -1674,6 +1674,24 @@
 	return context.sa_handler;
 #else
 	PyOS_sighandler_t handler;
+	/* Special signal handling for the secure CRT in Visual Studio 2005 */
+#if defined(_MSC_VER) && _MSC_VER >= 1400
+ 		switch (sig) {
+ 		/* Only these signals are valid */
+ 		case SIGINT:
+ 		case SIGILL:
+ 		case SIGFPE:
+ 		case SIGSEGV:
+ 		case SIGTERM:
+ 		case SIGBREAK:
+ 		case SIGABRT:
+	 		break;
+ 		/* Don't call signal() with other values or it will assert */
+ 		default:
+ 			return SIG_ERR;
+	 	}
+#endif /* _MSC_VER && _MSC_VER >= 1400 */
+
 	handler = signal(sig, SIG_IGN);
 	signal(sig, handler);
 	return handler;
--- misc/Python-2.3.4/configure	2004-05-07 21:13:40.000000000 +0200
+++ misc/build/Python-2.3.4/configure	2009-03-14 18:16:34.000000000 +0100
@@ -309,7 +309,7 @@
 # include <unistd.h>
 #endif"
 
-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS VERSION SOVERSION CONFIG_ARGS PYTHONFRAMEWORK PYTHONFRAMEWORKDIR PYTHONFRAMEWORKPREFIX PYTHONFRAMEWORKINSTALLDIR MACHDEP SGI_ABI EXTRAPLATDIR EXTRAMACHDEPPATH CXX MAINOBJ EXEEXT CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC OBJEXT CPP EGREP BUILDEXEEXT LIBRARY LDLIBRARY DLLLIBRARY BLDLIBRARY LDLIBRARYDIR INSTSONAME RUNSHARED LINKCC RANLIB ac_ct_RANLIB AR INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN OPT BASECFLAGS LIBTOOL_CRUFT SO LDSHARED BLDSHARED CCSHARED LINKFORSHARED CFLAGSFORSHARED SHLIBS USE_SIGNAL_MODULE SIGNAL_OBJS USE_THREAD_MODULE LDLAST THREADOBJ DLINCLDIR DYNLOADFILE MACHDEP_OBJS TRUE LIBOBJS HAVE_GETHOSTBYNAME_R_6_ARG HAVE_GETHOSTBYNAME_R_5_ARG HAVE_GETHOSTBYNAME_R_3_ARG HAVE_GETHOSTBYNAME_R HAVE_GETHOSTBYNAME LIBM LIBC UNICODE_OBJS THREADHEADERS SRCDIRS LTLIBOBJS'
+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS VERSION SOVERSION CONFIG_ARGS PYTHONFRAMEWORK PYTHONFRAMEWORKDIR PYTHONFRAMEWORKPREFIX PYTHONFRAMEWORKINSTALLDIR MACHDEP SGI_ABI EXTRAPLATDIR EXTRAMACHDEPPATH CXX MAINOBJ EXEEXT CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC OBJEXT CPP EGREP BUILDEXEEXT LIBRARY LDLIBRARY DLLLIBRARY BLDLIBRARY LDLIBRARYDIR INSTSONAME RUNSHARED LINKCC RANLIB ac_ct_RANLIB AR INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN OPT BASECFLAGS LIBTOOL_CRUFT SO LDSHARED BLDSHARED DESTSHAREDFORRULES CCSHARED LINKFORSHARED CFLAGSFORSHARED SHLIBS USE_SIGNAL_MODULE SIGNAL_OBJS USE_THREAD_MODULE LDLAST THREADOBJ DLINCLDIR DYNLOADFILE GETPATH_OBJS MACHDEP_OBJS TRUE LIBOBJS HAVE_GETHOSTBYNAME_R_6_ARG HAVE_GETHOSTBYNAME_R_5_ARG HAVE_GETHOSTBYNAME_R_3_ARG HAVE_GETHOSTBYNAME_R HAVE_GETHOSTBYNAME LIBM LIBC UNICODE_OBJS THREADHEADERS SRCDIRS LTLIBOBJS'
 ac_subst_files=''
 
 # Initialize some variables set by options.
@@ -1479,12 +1479,25 @@
   # several APIs are not declared. Since this is also needed in some
   # cases for HP-UX, we define it globally.
 
+define_xopen_source_extended=no
+case $ac_sys_system/$ac_sys_release in
+	SunOS/5.1*)
+		;;
+	*)
+		define_xopen_source_extended=yes
+		;;
+esac
+
+if test $define_xopen_source_extended = yes
+then
 
 cat >>confdefs.h <<\_ACEOF
 #define _XOPEN_SOURCE_EXTENDED 1
 _ACEOF
 
 
+fi
+
 cat >>confdefs.h <<\_ACEOF
 #define _POSIX_C_SOURCE 200112L
 _ACEOF
@@ -3590,6 +3603,9 @@
 _ACEOF
 
   case $ac_sys_system in
+    Darwin*)
+         LDLIBRARY='libpython$(VERSION).dylib'
+         ;;
     BeOS*)
           LDLIBRARY='libpython$(VERSION).so'
           ;;
@@ -3599,11 +3615,11 @@
           ;;
     SunOS*)
 	  LDLIBRARY='libpython$(VERSION).so'
-	  BLDLIBRARY='-Wl,-R,$(LIBDIR) -L. -lpython$(VERSION)'
+	  BLDLIBRARY=-R\'\$\$ORIGIN\'' -L. -lpython$(VERSION)'
 	  RUNSHARED=LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}
 	  INSTSONAME="$LDLIBRARY".$SOVERSION
           ;;
-    Linux*|GNU*|NetBSD*)
+    Linux*|GNU*|NetBSD*|FreeBSD*)
 	  LDLIBRARY='libpython$(VERSION).so'
 	  BLDLIBRARY='-L. -lpython$(VERSION)'
 	  RUNSHARED=LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}
@@ -4021,7 +4037,7 @@
 	    ;;
 	# is there any other compiler on Darwin besides gcc?
 	Darwin*)
-	    BASECFLAGS="$BASECFLAGS -Wno-long-double -no-cpp-precomp -mno-fused-madd"
+	    BASECFLAGS="$BASECFLAGS -fno-common -Wno-long-double -no-cpp-precomp -mno-fused-madd"
 	    ;;
     esac
     ;;
@@ -9739,6 +9755,10 @@
 _ACEOF
 
 
+ac_cv_sizeof_off_t=`echo $ac_cv_sizeof_off_t | tr -d '\015'`
+ac_cv_sizeof_long=`echo $ac_cv_sizeof_long | tr -d '\015'`
+ac_cv_sizeof_long_long=`echo $ac_cv_sizeof_long_long | tr -d '\015'`
+ac_cv_sizeof_short=`echo $ac_cv_sizeof_short | tr -d '\015'`
 echo "$as_me:$LINENO: checking whether to enable large file support" >&5
 echo $ECHO_N "checking whether to enable large file support... $ECHO_C" >&6
 if test "$have_long_long" = yes -a \
@@ -10021,6 +10041,12 @@
 
 
 
+DESTSHAREDFORRULES='$(DESTSHARED)'
+case $ac_sys_system in
+CYGWIN*)
+	DESTSHAREDFORRULES='$(shell cygpath -u $(DESTSHARED))';;
+esac
+
 
 # SO is the extension of shared libraries `(including the dot!)
 # -- usually .so, .sl on HP-UX, .dll on Cygwin
@@ -10069,8 +10095,8 @@
 	SunOS/4*) LDSHARED="ld";;
 	SunOS/5*)
 		if test "$GCC" = "yes"
-		then LDSHARED='$(CC) -shared'
-		else LDSHARED='$(CC) -G';
+		then LDSHARED='$(CC) $(LDFLAGS) -shared'
+		else LDSHARED='$(CC) $(LDFLAGS) -G';
 		fi ;;
 	hp*|HP*) LDSHARED="ld -b";;
 	OSF*) LDSHARED="ld -shared -expect_unresolved \"*\"";;
@@ -10082,7 +10108,7 @@
 			LDSHARED="$LDSHARED "'-framework $(PYTHONFRAMEWORK)'
 		else
 			# No framework. Ignore undefined symbols, assuming they come from Python
-			LDSHARED="$LDSHARED -undefined suppress"
+			LDSHARED="$LDSHARED -flat_namespace -undefined suppress"
 		fi ;;
 	Darwin/*)
 		LDSHARED='$(CC) $(LDFLAGS) -bundle'
@@ -10091,10 +10117,10 @@
 			LDSHARED="$LDSHARED "'-framework $(PYTHONFRAMEWORK)'
 		else
 			# No framework, use the Python app as bundle-loader
-			BLDSHARED="$LDSHARED "'-bundle_loader $(BUILDPYTHON)'
-			LDSHARED="$LDSHARED "'-bundle_loader $(BINDIR)/python$(VERSION)$(EXE)'
+			BLDSHARED="$LDSHARED -flat_namespace -undefined suppress"
+			LDSHARED="$LDSHARED -flat_namespace -undefined suppress"
 		fi ;;
-	Linux*|GNU*) LDSHARED='$(CC) -shared';;
+	Linux*|GNU*) LDSHARED='$(CC) $(LDFLAGS) -shared';;
 	dgux*) LDSHARED="ld -G";;
 	BSD/OS*/4*) LDSHARED="gcc -shared";;
 	OpenBSD*|FreeBSD*)
@@ -10112,7 +10138,7 @@
 		fi;;
 	SCO_SV*) LDSHARED='$(CC) -Wl,-G,-Bexport';;
 	Monterey*) LDSHARED="cc -G -dy -Bdynamic -Bexport -L/usr/lib/ia64l64";;
-	CYGWIN*) LDSHARED="gcc -shared -Wl,--enable-auto-image-base";;
+	CYGWIN*) LDSHARED=$CC" -shared -Wl,--enable-auto-image-base -Wl,--enable-runtime-pseudo-reloc ${LDFLAGS}";;
 	atheos*) LDSHARED="gcc -shared";;
 	*)	LDSHARED="ld";;
 	esac
@@ -10129,6 +10155,7 @@
 	case $ac_sys_system/$ac_sys_release in
 	SunOS*) if test "$GCC" = yes;
 	        then CCSHARED="-fPIC";
+	        else CCSHARED="-KPIC";  # for sun's cc
 	        fi;;
 	hp*|HP*) if test "$GCC" = yes;
 		 then CCSHARED="-fPIC";
@@ -10222,6 +10249,10 @@
 		CFLAGSFORSHARED='$(CCSHARED)'
 	esac
 fi
+case $ac_sys_system in
+CYGWIN*)
+		CFLAGSFORSHARED="$CFLAGSFORSHARED -DMS_COREDLL";;
+esac
 echo "$as_me:$LINENO: result: $CFLAGSFORSHARED" >&5
 echo "${ECHO_T}$CFLAGSFORSHARED" >&6
 
@@ -10833,6 +10864,152 @@
 
 USE_THREAD_MODULE=""
 
+case "$ac_sys_system" in
+CYGWIN*)
+    if test "${ac_cv_header_windows_h+set}" = set; then
+  echo "$as_me:$LINENO: checking for windows.h" >&5
+echo $ECHO_N "checking for windows.h... $ECHO_C" >&6
+if test "${ac_cv_header_windows_h+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+fi
+echo "$as_me:$LINENO: result: $ac_cv_header_windows_h" >&5
+echo "${ECHO_T}$ac_cv_header_windows_h" >&6
+else
+  # Is the header compilable?
+echo "$as_me:$LINENO: checking windows.h usability" >&5
+echo $ECHO_N "checking windows.h usability... $ECHO_C" >&6
+cat >conftest.$ac_ext <<_ACEOF
+#line $LINENO "configure"
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_includes_default
+#include <windows.h>
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+         { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ac_header_compiler=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+ac_header_compiler=no
+fi
+rm -f conftest.$ac_objext conftest.$ac_ext
+echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
+echo "${ECHO_T}$ac_header_compiler" >&6
+
+# Is the header present?
+echo "$as_me:$LINENO: checking windows.h presence" >&5
+echo $ECHO_N "checking windows.h presence... $ECHO_C" >&6
+cat >conftest.$ac_ext <<_ACEOF
+#line $LINENO "configure"
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <windows.h>
+_ACEOF
+if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
+  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } >/dev/null; then
+  if test -s conftest.err; then
+    ac_cpp_err=$ac_c_preproc_warn_flag
+  else
+    ac_cpp_err=
+  fi
+else
+  ac_cpp_err=yes
+fi
+if test -z "$ac_cpp_err"; then
+  ac_header_preproc=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+  ac_header_preproc=no
+fi
+rm -f conftest.err conftest.$ac_ext
+echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
+echo "${ECHO_T}$ac_header_preproc" >&6
+
+# So?  What about this header?
+case $ac_header_compiler:$ac_header_preproc in
+  yes:no )
+    { echo "$as_me:$LINENO: WARNING: windows.h: accepted by the compiler, rejected by the preprocessor!" >&5
+echo "$as_me: WARNING: windows.h: accepted by the compiler, rejected by the preprocessor!" >&2;}
+    { echo "$as_me:$LINENO: WARNING: windows.h: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: windows.h: proceeding with the preprocessor's result" >&2;}
+    (
+      cat <<\_ASBOX
+## ------------------------------------ ##
+## Report this to bug-autoconf@gnu.org. ##
+## ------------------------------------ ##
+_ASBOX
+    ) |
+      sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+  no:yes )
+    { echo "$as_me:$LINENO: WARNING: windows.h: present but cannot be compiled" >&5
+echo "$as_me: WARNING: windows.h: present but cannot be compiled" >&2;}
+    { echo "$as_me:$LINENO: WARNING: windows.h: check for missing prerequisite headers?" >&5
+echo "$as_me: WARNING: windows.h: check for missing prerequisite headers?" >&2;}
+    { echo "$as_me:$LINENO: WARNING: windows.h: proceeding with the preprocessor's result" >&5
+echo "$as_me: WARNING: windows.h: proceeding with the preprocessor's result" >&2;}
+    (
+      cat <<\_ASBOX
+## ------------------------------------ ##
+## Report this to bug-autoconf@gnu.org. ##
+## ------------------------------------ ##
+_ASBOX
+    ) |
+      sed "s/^/$as_me: WARNING:     /" >&2
+    ;;
+esac
+echo "$as_me:$LINENO: checking for windows.h" >&5
+echo $ECHO_N "checking for windows.h... $ECHO_C" >&6
+if test "${ac_cv_header_windows_h+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_header_windows_h=$ac_header_preproc
+fi
+echo "$as_me:$LINENO: result: $ac_cv_header_windows_h" >&5
+echo "${ECHO_T}$ac_cv_header_windows_h" >&6
+
+fi
+if test $ac_cv_header_windows_h = yes; then
+  cat >>confdefs.h <<\_ACEOF
+#define WITH_THREAD 1
+_ACEOF
+
+    cat >>confdefs.h <<\_ACEOF
+#define NT_THREADS 1
+_ACEOF
+
+    THREADOBJ="Python/thread.o"
+fi
+
+
+    ;;
+*)
 echo "$as_me:$LINENO: checking for --with-dec-threads" >&5
 echo $ECHO_N "checking for --with-dec-threads... $ECHO_C" >&6
 
@@ -12208,6 +12385,8 @@
         esac
     fi
 fi
+    ;;
+esac
 
 if test "$posix_threads" = "yes"; then
       if test "$unistd_defines_pthreads" = "no"; then
@@ -12986,8 +13165,9 @@
 	;;
 	BeOS*) DYNLOADFILE="dynload_beos.o";;
 	hp*|HP*) DYNLOADFILE="dynload_hpux.o";;
-	Darwin/*) DYNLOADFILE="dynload_next.o";;
+	Darwin/*) DYNLOADFILE="dynload_shlib.o";;
 	atheos*) DYNLOADFILE="dynload_atheos.o";;
+	CYGWIN*) DYNLOADFILE="dynload_win.o PC/import_nt.o PC/dl_nt.o";;
 	*)
 	# use dynload_shlib.c and dlopen() if we have it; otherwise stub
 	# out any dynamic loading
@@ -13009,6 +13189,23 @@
 
 fi
 
+
+echo "$as_me:$LINENO: checking GETPATH_OBJS" >&5
+echo $ECHO_N "checking GETPATH_OBJS... $ECHO_C" >&6
+if test -z "$GETPATH_OBJS"
+then
+	case $ac_sys_system in
+	CYGWIN*)
+		# Cygwin needs CCSHARED when building extension DLLs
+		# but not when building the interpreter DLL.
+		GETPATH_OBJS='PC/getpathp.o';;
+	*)
+		GETPATH_OBJS='Modules/getpath.o'
+	esac
+fi
+echo "$as_me:$LINENO: result: $GETPATH_OBJS" >&5
+echo "${ECHO_T}$GETPATH_OBJS" >&6
+
 # MACHDEP_OBJS can be set to platform-specific object files needed by Python
 
 
@@ -13020,8 +13217,8 @@
 else
 	MACHDEP_OBJS="$MACHDEP_OBJS $extra_machdep_objs"
 fi
-echo "$as_me:$LINENO: result: MACHDEP_OBJS" >&5
-echo "${ECHO_T}MACHDEP_OBJS" >&6
+echo "$as_me:$LINENO: result: $MACHDEP_OBJS" >&5
+echo "${ECHO_T}$MACHDEP_OBJS" >&6
 
 # checks for library functions
 
@@ -13094,10 +13291,9 @@
 
 
 
-
 for ac_func in alarm chown clock confstr ctermid execv \
  fork fpathconf ftime ftruncate \
- gai_strerror getgroups getlogin getloadavg getpeername getpgid getpid \
+ gai_strerror getgroups getlogin getloadavg getpgid getpid \
  getpriority getpwent getwd \
  kill killpg lchown lstat mkfifo mknod mktime \
  mremap nice pathconf pause plock poll pthread_init \
@@ -13191,6 +13387,144 @@
 fi
 done
 
+case "$ac_sys_system" in
+CYGWIN*)
+    echo "$as_me:$LINENO: checking for getpeername" >&5
+echo $ECHO_N "checking for getpeername... $ECHO_C" >&6
+    cat >conftest.$ac_ext <<_ACEOF
+#line $LINENO "configure"
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <winsock.h>
+int
+main ()
+{
+void *x=getpeername
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+         { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+
+cat >>confdefs.h <<\_ACEOF
+#define HAVE_GETPEERNAME 1
+_ACEOF
+
+      echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+
+fi
+rm -f conftest.$ac_objext conftest.$ac_ext
+    ;;
+*)
+
+for ac_func in getpeername
+do
+as_ac_var=`echo "ac_cv_func_$ac_func" | $as_tr_sh`
+echo "$as_me:$LINENO: checking for $ac_func" >&5
+echo $ECHO_N "checking for $ac_func... $ECHO_C" >&6
+if eval "test \"\${$as_ac_var+set}\" = set"; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+#line $LINENO "configure"
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+/* System header to define __stub macros and hopefully few prototypes,
+    which can conflict with char $ac_func (); below.
+    Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+    <limits.h> exists even on freestanding compilers.  Under hpux,
+    including <limits.h> includes <sys/time.h> and causes problems
+    checking for functions defined therein.  */
+#if defined (__STDC__) && !defined (_HPUX_SOURCE)
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+/* Override any gcc2 internal prototype to avoid an error.  */
+#ifdef __cplusplus
+extern "C"
+{
+#endif
+/* We use char because int might match the return type of a gcc2
+   builtin and then its argument prototype would still apply.  */
+char $ac_func ();
+/* The GNU C library defines this for functions which it implements
+    to always fail with ENOSYS.  Some functions are actually named
+    something starting with __ and the normal name is an alias.  */
+#if defined (__stub_$ac_func) || defined (__stub___$ac_func)
+choke me
+#else
+char (*f) () = $ac_func;
+#endif
+#ifdef __cplusplus
+}
+#endif
+
+int
+main ()
+{
+return f != $ac_func;
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext conftest$ac_exeext
+if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+         { ac_try='test -s conftest$ac_exeext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  eval "$as_ac_var=yes"
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+eval "$as_ac_var=no"
+fi
+rm -f conftest.$ac_objext conftest$ac_exeext conftest.$ac_ext
+fi
+echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_var'}'`" >&5
+echo "${ECHO_T}`eval echo '${'$as_ac_var'}'`" >&6
+if test `eval echo '${'$as_ac_var'}'` = yes; then
+  cat >>confdefs.h <<_ACEOF
+#define `echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+done
+
+    ;;
+esac
 
 # For some functions, having a definition is not sufficient, since
 # we want to take their address.
@@ -17800,6 +18134,7 @@
 
 
 
+ac_cv_sizeof_wchar_t=`echo $ac_cv_sizeof_wchar_t | tr -d '\015'`
 if test "$enable_unicode" = "no"
 then
   UNICODE_OBJS=""
@@ -17810,9 +18145,16 @@
 
 cat >>confdefs.h <<\_ACEOF
 #define Py_USING_UNICODE 1
+
 _ACEOF
 
-  if test "$unicode_size" = "$ac_cv_sizeof_wchar_t"
+  case $ac_sys_system in
+  CYGWIN*)
+  	ac_cv_use_wchar_t=0;;
+  *)
+  	ac_cv_use_wchar_t=1;;
+  esac
+  if test "$unicode_size" = "$ac_cv_sizeof_wchar_t" -a $ac_cv_use_wchar_t -gt 0
   then
     PY_UNICODE_TYPE="wchar_t"
 
@@ -18760,6 +19102,10 @@
 
 fi
 
+case $ac_sys_system in
+CYGWIN*)
+    ;;
+*)
 echo "$as_me:$LINENO: checking for /dev/ptmx" >&5
 echo $ECHO_N "checking for /dev/ptmx... $ECHO_C" >&6
 
@@ -18793,6 +19139,8 @@
   echo "$as_me:$LINENO: result: no" >&5
 echo "${ECHO_T}no" >&6
 fi
+;;
+esac
 
 echo "$as_me:$LINENO: checking for socklen_t" >&5
 echo $ECHO_N "checking for socklen_t... $ECHO_C" >&6
@@ -19537,6 +19885,7 @@
 s,@SO@,$SO,;t t
 s,@LDSHARED@,$LDSHARED,;t t
 s,@BLDSHARED@,$BLDSHARED,;t t
+s,@DESTSHAREDFORRULES@,$DESTSHAREDFORRULES,;t t
 s,@CCSHARED@,$CCSHARED,;t t
 s,@LINKFORSHARED@,$LINKFORSHARED,;t t
 s,@CFLAGSFORSHARED@,$CFLAGSFORSHARED,;t t
@@ -19548,6 +19897,7 @@
 s,@THREADOBJ@,$THREADOBJ,;t t
 s,@DLINCLDIR@,$DLINCLDIR,;t t
 s,@DYNLOADFILE@,$DYNLOADFILE,;t t
+s,@GETPATH_OBJS@,$GETPATH_OBJS,;t t
 s,@MACHDEP_OBJS@,$MACHDEP_OBJS,;t t
 s,@TRUE@,$TRUE,;t t
 s,@LIBOBJS@,$LIBOBJS,;t t
@@ -20024,6 +20374,19 @@
 if test ! -f Modules/Setup
 then
 	cp $srcdir/Modules/Setup.dist Modules/Setup
+        case $ac_sys_system in
+        CYGWIN*)
+		cat >>Modules/Setup <<_ACEOF
+_hotshot _hotshot.c
+_weakref _weakref.c
+_random _randommodule.c
+_testcapi _testcapimodule.c
+_locale _localemodule.c
+_csv _csv.c
+_socket socketmodule.c -lwsock32
+_ACEOF
+	;;
+	esac
 fi
 
 echo "creating Setup.local"
--- misc/Python-2.3.4/configure.in	Fri May  7 21:13:47 2004
+++ misc/build/Python-2.3.4/configure.in	Mon Apr 14 11:55:57 2008
@@ -174,9 +174,22 @@
   # several APIs are not declared. Since this is also needed in some
   # cases for HP-UX, we define it globally.
   
-  AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1, Define to activate Unix95-and-earlier features)
-  AC_DEFINE(_POSIX_C_SOURCE, 200112L, Define to activate features from IEEE Stds 1003.1-2001)
+define_xopen_source_extended = no
+case $ac_sys_system/$ac_sys_release in
+	SunOS/5.1*)
+		# don't define _XOPEN_SOURCE_EXTENDED as forces _XOPEN_SOURCE to be
+		# assumed as "4"
+		;;
+	*)
+		$define_xopen_source_extended = yes
+		;;
+esac
 
+	if test $define_xopen_source_extended = yes
+	then
+	  AC_DEFINE(_XOPEN_SOURCE_EXTENDED, 1, Define to activate Unix95-and-earlier features)
+	fi
+	  AC_DEFINE(_POSIX_C_SOURCE, 200112L, Define to activate features from IEEE Stds 1003.1-2001)
 fi
 
 #
--- misc/Python-2.3.4/pyconfig.h.in	2004-03-22 21:20:32.000000000 +0100
+++ misc/build/Python-2.3.4/pyconfig.h.in	2009-03-14 18:16:34.000000000 +0100
@@ -841,6 +841,9 @@
 /* Define _OSF_SOURCE to get the makedev macro. */
 #undef _OSF_SOURCE
 
+ /* _XOPEN defines and C++ are incompatibl */
+#ifndef __cplusplus
+
 /* Define to 2 if the system does not provide POSIX.1 features except with
    this defined. */
 #undef _POSIX_1_SOURCE
@@ -854,15 +857,22 @@
 /* Define if you have POSIX threads, and your system does not define that. */
 #undef _POSIX_THREADS
 
+#endif
+
 /* Define to force use of thread-safe errno, h_errno, and other functions */
 #undef _REENTRANT
 
+ /* _XOPEN defines and C++ are incompatibl */
+#ifndef __cplusplus
+
 /* Define to the level of X/Open that your system supports */
 #undef _XOPEN_SOURCE
 
 /* Define to activate Unix95-and-earlier features */
 #undef _XOPEN_SOURCE_EXTENDED
 
+#endif
+
 /* Define on FreeBSD to activate all library features */
 #undef __BSD_VISIBLE
 
@@ -907,6 +917,13 @@
 /* Define to empty if the keyword does not work. */
 #undef volatile
 
+#ifdef __MINGW32__
+/* Define this if you have Windows NT threads */
+#undef NT_THREADS
+#ifndef PYTHONPATH
+#	define PYTHONPATH ".\\DLLs;.\\lib;.\\lib\\plat-win;.\\lib\\lib-tk"
+#endif
+#endif
 
 /* Define the macros needed if on a UnixWare 7.x system. */
 #if defined(__USLC__) && defined(__SCO_VERSION__)
