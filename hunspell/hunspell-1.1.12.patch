--- misc/hunspell-1.1.12/configure	2007-09-04 02:20:37.000000000 +0200
+++ misc/build/hunspell-1.1.12/configure	2008-04-24 12:17:58.000000000 +0200
@@ -1629,9 +1629,6 @@
   test "$program_prefix$program_suffix$program_transform_name" = \
     NONENONEs,x,x, &&
   program_prefix=${target_alias}-
-case "$host" in
-arm*) XFAILED="flagutf8.test maputf.test";;
-esac
 
 
 am__api_version="1.9"
--- misc/hunspell-1.1.12/intl/localename.c	2007-04-06 17:05:34.000000000 +0900
+++ misc/build/hunspell-1.1.12/intl/localename.c	2008-06-20 19:47:59.000875000 +0900
@@ -140,6 +140,9 @@
 # ifndef LANG_SINDHI
 # define LANG_SINDHI 0x59
 # endif
+# ifndef LANG_SORBIAN
+# define LANG_SORBIAN 0x2e
+# endif
 # ifndef LANG_SLOVAK
 # define LANG_SLOVAK 0x1b
 # endif
--- misc/hunspell-1.1.12/src/hunspell/affixmgr.cxx	2007-09-04 09:49:30.000000000 +0200
+++ misc/build/hunspell-1.1.12/src/hunspell/affixmgr.cxx	2008-04-23 22:59:31.000000000 +0200
@@ -25,6 +25,10 @@
 #endif
 #endif
 
+#ifdef OS2
+#undef DEBUG
+#endif
+
 AffixMgr::AffixMgr(const char * affpath, HashMgr* ptr) 
 {
   // register hash manager and load affix data from aff file
@@ -2789,7 +2793,7 @@
 
 int AffixMgr::expand_rootword(struct guessword * wlst, int maxn, const char * ts,
     int wl, const unsigned short * ap, unsigned short al, char * bad, int badl,
-    char * phone)
+    char * phone_)
 {
 
     int nh=0;
@@ -2801,8 +2805,8 @@
        wlst[nh].orig = NULL;
        nh++;
        // add special phonetic version
-       if (phone && (nh < maxn)) {
-    	    wlst[nh].word = mystrdup(phone);
+       if (phone_ && (nh < maxn)) {
+    	    wlst[nh].word = mystrdup(phone_);
     	    wlst[nh].allow = (1 == 0);
     	    wlst[nh].orig = mystrdup(ts);
     	    nh++;
@@ -2832,11 +2836,11 @@
                     wlst[nh].orig = NULL;
                     nh++;
                     // add special phonetic version
-    		    if (phone && (nh < maxn)) {
+    		    if (phone_ && (nh < maxn)) {
     			char st[MAXWORDUTF8LEN];
-    			strcpy(st, phone);
+    			strcpy(st, phone_);
     			strcat(st, sptr->getKey());
-    			reverseword(st + strlen(phone));
+    			reverseword(st + strlen(phone_));
     			wlst[nh].word = mystrdup(st);
     			wlst[nh].allow = (1 == 0);
     			wlst[nh].orig = mystrdup(newword);
--- misc/hunspell-1.1.12/src/hunspell/affixmgr.hxx	Fri Aug 31 18:00:04 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/affixmgr.hxx	Fri Aug 22 15:28:42 2008
@@ -2,9 +2,6 @@
 #define _AFFIXMGR_HXX_
 
 #ifdef MOZILLA_CLIENT
-#ifdef __SUNPRO_CC // for SunONE Studio compiler
-using namespace std;
-#endif
 #include <stdio.h>
 #else
 #include <cstdio>
--- misc/hunspell-1.1.12/src/hunspell/atypes.hxx	Sat Sep  1 08:57:35 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/atypes.hxx	Mon Jun 16 15:50:27 2008
@@ -1,6 +1,8 @@
 #ifndef _ATYPES_HXX_
 #define _ATYPES_HXX_
 
+#include <stdio.h>
+
 #ifndef HUNSPELL_WARNING
 #ifdef HUNSPELL_WARNING_ON
 #define HUNSPELL_WARNING fprintf
@@ -9,7 +11,7 @@
 static inline void HUNSPELL_WARNING(FILE *, const char *, ...) {}
 #endif
 #endif
-
+ 
 // HUNSTEM def.
 #define HUNSTEM
 
@@ -91,8 +93,3 @@
 };
 
 #endif
-
-
-
-
-
--- misc/hunspell-1.1.12/src/hunspell/csutil.cxx	Thu Aug 23 09:27:39 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/csutil.cxx	Fri Aug 22 15:28:20 2008
@@ -18,12 +18,12 @@
 #include "langnum.hxx"
 
 #ifdef OPENOFFICEORG
-#  include <unicode/uchar.h>
+#include <unicode/uchar.h>
 #else
-#  ifndef MOZILLA_CLIENT
-#    include "utf_info.cxx"
-#    define UTF_LST_LEN (sizeof(utf_lst) / (sizeof(unicode_info)))
-#  endif
+#ifndef MOZILLA_CLIENT
+#include "utf_info.cxx"
+#define UTF_LST_LEN (sizeof(utf_lst) / (sizeof(unicode_info)))
+#endif
 #endif
 
 #ifdef MOZILLA_CLIENT
@@ -125,7 +125,7 @@
         case 0x90:
         case 0xa0:
         case 0xb0: {
-            HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Unexpected continuation bytes in %d. character position\n%s\n", u8 - src, src);    
+            HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Unexpected continuation bytes in %ld. character position\n%s\n", static_cast<long>(u8 - src), src);    
             u2->h = 0xff;
             u2->l = 0xfd;
             break;
@@ -137,7 +137,7 @@
                 u2->l = (*u8 << 6) + (*(u8+1) & 0x3f);
                 u8++;
             } else {
-                HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %d. character position:\n%s\n", u8 - src, src);
+                HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %ld. character position:\n%s\n", static_cast<long>(u8 - src), src);
                 u2->h = 0xff;
                 u2->l = 0xfd;
             }
@@ -151,12 +151,12 @@
                     u2->l = (*u8 << 6) + (*(u8+1) & 0x3f);
                     u8++;
                 } else {
-                    HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %d. character position:\n%s\n", u8 - src, src);
+                    HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %ld. character position:\n%s\n", static_cast<long>(u8 - src), src);
                     u2->h = 0xff;
                     u2->l = 0xfd;
                 }
             } else {
-                HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %d. character position:\n%s\n", u8 - src, src);
+                HUNSPELL_WARNING(stderr, "UTF-8 encoding error. Missing continuation byte in %ld. character position:\n%s\n", static_cast<long>(u8 - src), src);
                 u2->h = 0xff;
                 u2->l = 0xfd;
             }
@@ -4939,7 +4939,7 @@
 { 0x00, 0xff, 0xff },
 };
 
-struct enc_entry encds[] = {
+static struct enc_entry encds[] = {
 {"ISO8859-1",iso1_tbl},
 {"ISO8859-2",iso2_tbl},
 {"ISO8859-3",iso3_tbl},
--- misc/hunspell-1.1.12/src/hunspell/csutil.hxx	Sun Sep  2 02:04:00 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/csutil.hxx	Tue Jun 17 12:51:49 2008
@@ -21,7 +21,11 @@
 // default flags
 #define ONLYUPCASEFLAG 65535
 
+#ifdef GCC
+typedef struct __attribute__ ((packed)) {
+#else
 typedef struct {
+#endif
     unsigned char l;
     unsigned char h;
 } w_char;
--- misc/hunspell-1.1.12/src/hunspell/hashmgr.hxx	Sun Aug 26 03:45:12 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/hashmgr.hxx	Fri Aug 22 15:28:50 2008
@@ -3,6 +3,9 @@
 
 #ifndef MOZILLA_CLIENT
 #include <cstdio>
+#ifndef __SUNPRO_CC // for SunONE Studio compiler
+using namespace std;
+#endif
 #else
 #include <stdio.h>
 #endif
@@ -61,11 +64,11 @@
   int add_word(const char * word, int wbl, int wcl, unsigned short * ap,
     int al, const char * desc, bool onlyupcase);
   int load_config(const char * affpath);
-  int parse_aliasf(char * line, FILE * af);
+  int parse_aliasf(char * line, std::FILE * af);
   int add_hidden_capitalized_word(char * word, int wbl, int wcl,
     unsigned short * flags, int al, char * dp, int captype);
 #ifdef HUNSPELL_EXPERIMENTAL
-  int parse_aliasm(char * line, FILE * af);
+  int parse_aliasm(char * line, std::FILE * af);
 #endif
 
 };
--- misc/hunspell-1.1.12/src/hunspell/hunspell.cxx	Tue Aug 28 15:17:30 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/hunspell.cxx	Fri Aug 22 15:29:06 2008
@@ -1,3 +1,7 @@
+#ifdef _MSC_VER
+#pragma setlocale("C")
+#endif
+
 #include "license.hunspell"
 #include "license.myspell"
 
@@ -11,8 +15,16 @@
 #include <stdio.h> 
 #endif
 
+#ifdef __SUNPRO_CC
+#include <cstdlib>
+#endif
+
 #include "hunspell.hxx"
-#include "hunspell.h"
+#ifndef OPENOFFICEORG
+#ifndef MOZILLA_CLIENT
+//#include "hunspell.h"
+#endif
+#endif
 
 #ifndef MOZILLA_CLIENT
 #ifndef W32
@@ -1727,29 +1739,3 @@
 }
 
 #endif // END OF HUNSPELL_EXPERIMENTAL CODE
-
-Hunhandle *Hunspell_create(const char * affpath, const char * dpath)
-{
-        return (Hunhandle*)(new Hunspell(affpath, dpath));
-}
-
-void Hunspell_destroy(Hunhandle *pHunspell)
-{
-        delete (Hunspell*)(pHunspell);
-}
-
-int Hunspell_spell(Hunhandle *pHunspell, const char *word)
-{
-        return ((Hunspell*)pHunspell)->spell(word);
-}
-
-char *Hunspell_get_dic_encoding(Hunhandle *pHunspell)
-{
-        return ((Hunspell*)pHunspell)->get_dic_encoding();
-}
-
-int Hunspell_suggest(Hunhandle *pHunspell, char*** slst, const char * word)
-{
-        return ((Hunspell*)pHunspell)->suggest(slst, word);
-}
-
--- misc/hunspell-1.1.12/src/hunspell/license.hunspell	2007-06-14 14:07:47.000000000 +0200
+++ misc/build/hunspell-1.1.12/src/hunspell/license.hunspell	2008-04-23 22:59:31.000000000 +0200
@@ -56,4 +56,3 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
-#include "config.h"
--- misc/hunspell-1.1.12/src/hunspell/makefile.mk	2007-04-06 10:05:32.000000000 +0200
+++ misc/build/hunspell-1.1.12/src/hunspell/makefile.mk	2008-06-11 19:31:42.983723000 +0200
@@ -60,11 +60,12 @@
 #
 #*************************************************************************
 
-PRJ = ..
+PRJ = ../../../../../..
 
 PRJNAME	= hunspell
 TARGET	= hunspell
-LIBTARGET=NO
+LIBTARGET=YES
+EXTERNAL_WARNINGS_NOT_ERRORS := TRUE
 
 #----- Settings ---------------------------------------------------------
 
@@ -73,7 +74,7 @@
 # --- Files --------------------------------------------------------
 
 # all_target: ALLTAR DICTIONARY
-all_target: ALLTAR
+#all_target: ALLTAR
 
 ##CXXFLAGS += -I..$/..$/lingutil
 ##CFLAGSCXX += -I..$/..$/lingutil
@@ -81,7 +82,7 @@
 
 CDEFS+=-DOPENOFFICEORG
 
-SLOFILES=	\
+OBJFILES=	\
 		$(SLO)$/affentry.obj \
 		$(SLO)$/affixmgr.obj \
 		$(SLO)$/dictmgr.obj \
@@ -89,11 +90,12 @@
 		$(SLO)$/utf_info.obj \
 		$(SLO)$/hashmgr.obj \
 		$(SLO)$/suggestmgr.obj \
+		$(SLO)$/phonet.obj \
 		$(SLO)$/hunspell.obj
 
 LIB1TARGET= $(SLB)$/lib$(TARGET).lib
 LIB1ARCHIV= $(LB)/lib$(TARGET).a
-LIB1OBJFILES= $(SLOFILES)
+LIB1OBJFILES= $(OBJFILES)
 
 # DIC2BIN= \
 #	en_US.aff \
--- misc/hunspell-1.1.12/src/hunspell/phonet.cxx	Mon Aug 27 21:45:49 2007
+++ misc/build/hunspell-1.1.12/src/hunspell/phonet.cxx	Tue Jun 17 12:51:33 2008
@@ -32,6 +32,7 @@
 #include <cstring>
 #include <cstdio>
 #include <cctype>
+using namespace std;
 #else
 #include <stdlib.h> 
 #include <string.h>
--- misc/hunspell-1.1.12/src/hunspell/suggestmgr.cxx	2007-09-04 13:21:26.000000000 +0200
+++ misc/build/hunspell-1.1.12/src/hunspell/suggestmgr.cxx	2008-04-23 22:59:31.000000000 +0200
@@ -118,7 +118,7 @@
       return ns;
 }
 
-// generate suggestions for a mispelled word
+// generate suggestions for a misspelled word
 //    pass in address of array of char * pointers
 // onlycompoundsug: probably bad suggestions (need for ngram sugs, too)
 
--- misc/hunspell-1.1.12/src/tools/hunspell.cxx	Tue Jul 24 13:47:52 2007
+++ misc/build/hunspell-1.1.12/src/tools/hunspell.cxx	Fri Aug 22 15:29:12 2008
@@ -8,6 +8,12 @@
 #include <cstdlib>
 #include <cstdio>
 
+#ifdef __SUNPRO_CC
+using namespace std;
+#include <string.h>
+#include <malloc.h>
+#endif
+
 #include "config.h"
 #include "hunspell.hxx"
 
@@ -85,8 +91,10 @@
 #if ENABLE_NLS
 #ifdef HAVE_LOCALE_H
 #include <locale.h>
+#ifdef HAVE_LANGINFO_CODESET
 #include <langinfo.h>
 #endif
+#endif
 
 #ifdef HAVE_LIBINTL_H
 #include <libintl.h>
@@ -1227,7 +1235,9 @@
 #ifdef HAVE_LOCALE_H
 	ui_lang = setlocale(LC_ALL, "");
 	textdomain("hunspell");
+#ifdef HAVE_LANGINFO_CODESET
         ui_enc = nl_langinfo(CODESET);
+#endif
 #endif
 #endif
 
--- misc/hunspell-1.1.12/tests/Makefile.am	Tue Sep  4 01:25:35 2007
+++ misc/build/hunspell-1.1.12/tests/Makefile.am	Wed Jun 18 11:53:11 2008
@@ -6,29 +6,18 @@
 
 TESTS =	\
 affixes.test \
-base.test \
 base_utf.test \
-allcaps.test \
 allcaps_utf.test \
-allcaps2.test \
-allcaps3.test \
-keepcase.test \
-i58202.test \
 map.test \
-rep.test \
-sug.test \
 sugutf.test \
-phone.test \
 flag.test \
 flaglong.test \
 flagnum.test \
 flagutf8.test \
-slash.test \
 forbiddenword.test \
 nosuggest.test \
 alias.test \
 alias2.test \
-alias3.test \
 break.test \
 needaffix.test \
 needaffix2.test \
@@ -39,7 +28,6 @@
 fogemorpheme.test \
 onlyincompound.test \
 complexprefixes.test \
-complexprefixes2.test \
 complexprefixesutf.test \
 conditionalprefix.test \
 zeroaffix.test \
@@ -51,7 +39,6 @@
 compoundrule.test \
 compoundrule2.test \
 compoundrule3.test \
-compoundrule4.test \
 compoundrule5.test \
 compoundrule6.test \
 compoundaffix.test \
@@ -64,12 +51,7 @@
 checkcompoundcaseutf.test \
 checkcompoundpattern.test \
 utfcompound.test \
-checksharps.test \
 checksharpsutf.test \
-germancompounding.test \
-germancompoundingold.test \
-i35725.test \
-i53643.test \
 i54633.test \
 i54980.test \
 maputf.test \
@@ -77,11 +59,8 @@
 ignore.test \
 ignoreutf.test \
 1592880.test \
-1695964.test \
 1463589.test \
 1463589_utf.test \
-IJ.test \
-i68568.test \
 i68568utf.test \
 1706659.test \
 digits_in_words.test \
--- misc/hunspell-1.1.12/tests/Makefile.in	Tue Sep  4 02:20:35 2007
+++ misc/build/hunspell-1.1.12/tests/Makefile.in	Wed Jun 18 11:53:11 2008
@@ -196,29 +196,18 @@
 XFAIL_TESTS = @XFAILED@
 TESTS = \
 affixes.test \
-base.test \
 base_utf.test \
-allcaps.test \
 allcaps_utf.test \
-allcaps2.test \
-allcaps3.test \
-keepcase.test \
-i58202.test \
 map.test \
-rep.test \
-sug.test \
 sugutf.test \
-phone.test \
 flag.test \
 flaglong.test \
 flagnum.test \
 flagutf8.test \
-slash.test \
 forbiddenword.test \
 nosuggest.test \
 alias.test \
 alias2.test \
-alias3.test \
 break.test \
 needaffix.test \
 needaffix2.test \
@@ -229,7 +218,6 @@
 fogemorpheme.test \
 onlyincompound.test \
 complexprefixes.test \
-complexprefixes2.test \
 complexprefixesutf.test \
 conditionalprefix.test \
 zeroaffix.test \
@@ -241,7 +229,6 @@
 compoundrule.test \
 compoundrule2.test \
 compoundrule3.test \
-compoundrule4.test \
 compoundrule5.test \
 compoundrule6.test \
 compoundaffix.test \
@@ -254,12 +241,7 @@
 checkcompoundcaseutf.test \
 checkcompoundpattern.test \
 utfcompound.test \
-checksharps.test \
 checksharpsutf.test \
-germancompounding.test \
-germancompoundingold.test \
-i35725.test \
-i53643.test \
 i54633.test \
 i54980.test \
 maputf.test \
@@ -267,11 +249,8 @@
 ignore.test \
 ignoreutf.test \
 1592880.test \
-1695964.test \
 1463589.test \
 1463589_utf.test \
-IJ.test \
-i68568.test \
 i68568utf.test \
 1706659.test \
 digits_in_words.test \
